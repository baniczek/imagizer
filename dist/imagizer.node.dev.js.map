{"version":3,"sources":["webpack:///webpack/bootstrap 0faf4fe2978c32fefa9a","webpack:///./src/classes/effects/BasePoint.js","webpack:///./src/classes/effects/BaseTransform.js","webpack:///./src/helpers/common.js","webpack:///./src/classes/effects/BaseCustom.js","webpack:///./src/helpers/noise.js","webpack:///./src/classes/CanvasWrapper.js","webpack:///./src/helpers/color.js","webpack:///./~/extend/index.js","webpack:///./src/classes/EffectsRepository.js","webpack:///./src/classes/effects/Base.js","webpack:///external \"canvas\"","webpack:///external \"fs\"","webpack:///./src/main.js","webpack:///./src/classes/BaseOnLayer.js","webpack:///./src/classes/Image.js","webpack:///./src/classes/Layer.js","webpack:///./src/classes/LayerObject.js","webpack:///./src/classes/Project.js","webpack:///./src/classes/effects/custom/AutoWhiteBalance.js","webpack:///./src/classes/effects/custom/Block.js","webpack:///./src/classes/effects/custom/Border.js","webpack:///./src/classes/effects/custom/ComponentStretching.js","webpack:///./src/classes/effects/custom/Emboss.js","webpack:///./src/classes/effects/custom/FillColor.js","webpack:///./src/classes/effects/custom/Flip.js","webpack:///./src/classes/effects/point/AutoContrast.js","webpack:///./src/classes/effects/point/Brightness.js","webpack:///./src/classes/effects/point/ChannelMix.js","webpack:///./src/classes/effects/point/Contrast.js","webpack:///./src/classes/effects/point/Diffusion.js","webpack:///./src/classes/effects/point/Dissolve.js","webpack:///./src/classes/effects/point/Dither.js","webpack:///./src/classes/effects/point/Edge.js","webpack:///./src/classes/effects/point/Exposure.js","webpack:///./src/classes/effects/point/Gain.js","webpack:///./src/classes/effects/point/Gamma.js","webpack:///./src/classes/effects/point/GrayScale.js","webpack:///./src/classes/effects/point/HSBAdjust.js","webpack:///./src/classes/effects/point/Invert.js","webpack:///./src/classes/effects/point/InvertAlpha.js","webpack:///./src/classes/effects/point/Levels.js","webpack:///./src/classes/effects/point/Rescale.js","webpack:///./src/classes/effects/point/Sepia.js","webpack:///./src/classes/effects/point/Solarize.js","webpack:///./src/classes/effects/point/Threshold.js","webpack:///./src/classes/effects/point/Tritone.js","webpack:///./src/classes/effects/transform/Circle.js","webpack:///./src/classes/effects/transform/Diffuse.js","webpack:///./src/classes/effects/transform/Kaleidoscope.js","webpack:///./src/classes/effects/transform/Marble.js","webpack:///./src/classes/effects/transform/Offset.js","webpack:///./src/classes/effects/transform/Perspective.js","webpack:///./src/classes/effects/transform/Pinch.js","webpack:///./src/classes/effects/transform/Polar.js","webpack:///./src/classes/effects/transform/Ripple.js","webpack:///./src/classes/effects/transform/Rotate.js","webpack:///./src/classes/effects/transform/Shear.js","webpack:///./src/classes/effects/transform/Sphere.js","webpack:///./src/classes/effects/transform/Swim.js","webpack:///./src/classes/effects/transform/Twirl.js","webpack:///./src/classes/effects/transform/Water.js","webpack:///./src/helpers/resize.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AChEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wEAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,iBAAiB;AACjB;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,sBAAsB;AACrC,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0E;;;;;;;;;;ACxHA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wEAAgC;;AAEhC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;;AAEA,eAAe,sBAAsB;AACrC,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8E;;;;;;;;;;;;;;AC3CA;AAAA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,sCAAsC;AAC/D,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,oCAAoC;AAC9D,4BAA4B,kCAAkC;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;ACpPA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wEAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,iBAAiB;AACjB;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,2E;;;;;;;ACtHA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;;AAEA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;;AAEA,gE;;;;;;;;ACrPe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wE;;;;;;;;;;;;;;;AClEA;AAAA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B;AAC7B,0BAA0B;AAC1B,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;ACtSA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,YAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4E;;;;;;;ACzGA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qE;;;;;;AClBA,mC;;;;;;ACAA,+B;;;;;;;;;;;;;ACAA;AACA;AACe;;AAKf;;;;;;;;;;ACPA;AAKC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4E;;;;;;;;;;AC5EA;AACA;AACe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gE;;;;;;;;;;;AC1DA;AACA;AAIC;AACD;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mGAAiD;AACjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,eAAe,yBAAyB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,yBAAyB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gE;;;;;;;;;;AC9JA;AACsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,sE;;;;;;;;;;;ACpHA;AACA;AAKC;AACD;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,eAAe,yBAAyB;AACxC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA,kE;;;;;;;;;ACpGA;AAIC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iF;;;;;;;;AC1DA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA,sE;;;;;;;;AC5DA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;ACrDA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oF;;;;;;;;;AC5CA;AAGC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B;AACA;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;;ACnGA;AAGC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA,0E;;;;;;;;ACxCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qE;;;;;;;;AC1FA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B,iBAAiB,WAAW;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6E;;;;;;;;ACvCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2E;;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2E;;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yE;;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,8BAA8B;AAC7C;AACA;;AAEA,eAAe,uBAAuB;AACtC;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0E;;;;;;;;;AClGA;AACmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yE;;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,uBAAuB;AACtC;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uE;;;;;;;;ACjKA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qE;;;;;;;;ACvHA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yE;;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qE;;;;;;;;ACpDA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sE;;;;;;;;AC3CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0E;;;;;;;;;AClBA;AAIC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0E;;;;;;;;AC1CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4E;;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;ACnMA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wE;;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0E;;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yE;;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0E;;;;;;;;;AC5BA;AACkB;;AAElB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wE;;;;;;;;;ACtDA;AACY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;AC1CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wE;;;;;;;;;ACxCA;AACiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6E;;;;;;;;;ACjDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;AC/CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;;AC/BA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4E;;;;;;;;ACtFA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sE;;;;;;;;AC9DA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sE;;;;;;;;;;ACzLA;AAIC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;ACzDA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sE;;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uE;;;;;;;;;ACvEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qE;;;;;;;;;ACnDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sE;;;;;;;;;ACxDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sE;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B,eAAe,cAAc;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B,eAAe,cAAc;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,C","file":"imagizer.node.dev.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 62);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0faf4fe2978c32fefa9a","import BaseEffect from './Base';\nimport extend from 'extend';\n\nclass BasePointEffect extends BaseEffect {\n  callback(pixel, x, y, parameters, width, height) {\n    throw \"Extend it.\"\n  }\n\n  run(imageData, parameters) {\n\n    parameters = extend(true, {}, this.getDefaultParameters(), parameters);\n\n    let x, y,\n      firstPixelIndex,\n      result,\n      imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex(x, y) {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = { // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (x, y) {\n          let index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3]\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (x, y) {\n          let index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3]\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (x, y, rgba) {\n          let index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height\n      };\n\n    sandbox.data = this.before.call(sandbox, parameters, imageData.width, imageData.height, imageData);\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        firstPixelIndex = getIndex(x, y);\n\n        result = this.callback.call(sandbox,\n          {\n            r: imageDataCopy[firstPixelIndex + 0],\n            g: imageDataCopy[firstPixelIndex + 1],\n            b: imageDataCopy[firstPixelIndex + 2],\n            a: imageDataCopy[firstPixelIndex + 3]\n          },\n          x,\n          y,\n          parameters,\n          imageData.width,\n          imageData.height\n        );\n\n        if (typeof result === \"object\") {\n          imageDataCopy[firstPixelIndex + 0] = normalizePixelValue(result.r);\n          imageDataCopy[firstPixelIndex + 1] = normalizePixelValue(result.g);\n          imageDataCopy[firstPixelIndex + 2] = normalizePixelValue(result.b);\n          imageDataCopy[firstPixelIndex + 3] = normalizePixelValue(result.a);\n        }\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BasePointEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/BasePoint.js\n// module id = 0\n// module chunks = 0","import BaseEffect from './Base';\nimport extend from 'extend';\n\nclass BaseTransformEffect extends BaseEffect {\n  callback(pixel, x, y, parameters, width, height) {\n    throw \"Extend it.\"\n  }\n\n  run(imageData, parameters) {\n\n    parameters = extend(true, {}, this.getDefaultParameters(), parameters);\n\n    let x, y,\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        data: null\n      },\n      imageDataCopy = new Uint8ClampedArray(imageData.data);\n\n    sandbox.data = this.before.call(sandbox, parameters, imageData.width, imageData.height, imageData);\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        var newXY = this.callback.call(sandbox, x, y, parameters, imageData.width, imageData.height),\n          newX = normalizePixelValue(newXY[0]),\n          newY = normalizePixelValue(newXY[1]),\n          oldPixelIndex = y * imageData.width * 4 + x * 4,\n          newPixelIndex = newY * imageData.width * 4 + newX * 4;\n\n        imageDataCopy[oldPixelIndex + 0] = imageData.data[newPixelIndex + 0];\n        imageDataCopy[oldPixelIndex + 1] = imageData.data[newPixelIndex + 1];\n        imageDataCopy[oldPixelIndex + 2] = imageData.data[newPixelIndex + 2];\n        imageDataCopy[oldPixelIndex + 3] = imageData.data[newPixelIndex + 3];\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BaseTransformEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/BaseTransform.js\n// module id = 1\n// module chunks = 0","let blendingModes = {\n  lighten: function (bottomPixel, topPixel) {\n    return topPixel > bottomPixel ? topPixel : bottomPixel;\n  },\n  darken: function (bottomPixel, topPixel) {\n    return topPixel > bottomPixel ? bottomPixel : topPixel;\n  },\n  multiply: function (bottomPixel, topPixel) {\n    return bottomPixel * topPixel / 255;\n  },\n  average: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel / 2;\n  },\n  add: function (bottomPixel, topPixel) {\n    return Math.min(255, bottomPixel + topPixel);\n  },\n  subtract: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel < 255 ? 0 : bottomPixel + topPixel - 255;\n  },\n  difference: function (bottomPixel, topPixel) {\n    return Math.abs(bottomPixel - topPixel);\n  },\n  negation: function (bottomPixel, topPixel) {\n    return 255 - Math.abs(255 - bottomPixel - topPixel);\n  },\n  screen: function (bottomPixel, topPixel) {\n    return 255 - (((255 - bottomPixel) * (255 - topPixel)) >> 8);\n  },\n  exclusion: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel - 2 * bottomPixel * topPixel / 255;\n  },\n  overlay: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? (2 * bottomPixel * topPixel / 255)\n      : (255 - 2 * (255 - bottomPixel) * (255 - topPixel) / 255);\n  },\n  softLight: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? (2 * ((bottomPixel >> 1) + 64)) * (topPixel / 255)\n      : 255 - (2 * (255 - (( bottomPixel >> 1) + 64)) * (255 - topPixel) / 255);\n  },\n  hardLight: function (bottomPixel, topPixel) {\n    return blendingModes.softLight(topPixel, bottomPixel);\n  },\n  colorDodge: function (bottomPixel, topPixel) {\n    return topPixel == 255 ? topPixel : Math.min(255, ((bottomPixel << 8 ) / (255 - topPixel)));\n  },\n  colorBurn: function (bottomPixel, topPixel) {\n    return topPixel == 0 ? topPixel : Math.max(0, (255 - ((255 - bottomPixel) << 8 ) / topPixel));\n  },\n  linearDodge: function (bottomPixel, topPixel) {\n    return blendingModes.add(bottomPixel, topPixel);\n  },\n  linearBurn: function (bottomPixel, topPixel) {\n    return blendingModes.subtract(bottomPixel, topPixel);\n  },\n  linearLight: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? blendingModes.linearBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.linearDodge(bottomPixel, (2 * (topPixel - 128)));\n  },\n  vividLight: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? blendingModes.colorBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.colorDodge(bottomPixel, (2 * (topPixel - 128)));\n  },\n  pinLight: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? blendingModes.darken(bottomPixel, 2 * topPixel)\n      : blendingModes.lighten(bottomPixel, (2 * (topPixel - 128)));\n  },\n  hardMix: function (bottomPixel, topPixel) {\n    return blendingModes.vividLight(bottomPixel, topPixel) < 128 ? 0 : 255;\n  },\n  reflect: function (bottomPixel, topPixel) {\n    return topPixel == 255 ? topPixel : Math.min(255, (bottomPixel * bottomPixel / (255 - topPixel)))\n  },\n  glow: function (bottomPixel, topPixel) {\n    return blendingModes.reflect(topPixel, bottomPixel);\n  },\n  phoenix: function (bottomPixel, topPixel) {\n    return Math.min(bottomPixel, topPixel) - Math.max(bottomPixel, topPixel) + 255\n  }\n};\n\nexport function mergeImageData(bottom, top, pixelCallback) {\n  let x, y,\n    xx, yy,\n    firstOldPixelIndex, firstNewPixelIndex,\n    pixelResult;\n\n  for (y = top.y, yy = 0; y < bottom.height && yy < top.height; y += 1, yy += 1) {\n    for (x = top.x, xx = 0; x < bottom.width && xx < top.width; x += 1, xx += 1) {\n      if (xx < top.width && yy < top.height) // overwrite only rect-size of current layer\n      {\n        firstOldPixelIndex = y * bottom.width * 4 + x * 4;\n        firstNewPixelIndex = yy * top.width * 4 + xx * 4;\n\n        pixelResult = pixelCallback({\n          r: bottom.imageData.data[firstOldPixelIndex + 0],\n          g: bottom.imageData.data[firstOldPixelIndex + 1],\n          b: bottom.imageData.data[firstOldPixelIndex + 2],\n          a: bottom.imageData.data[firstOldPixelIndex + 3]\n        }, {\n          r: top.imageData.data[firstNewPixelIndex + 0],\n          g: top.imageData.data[firstNewPixelIndex + 1],\n          b: top.imageData.data[firstNewPixelIndex + 2],\n          a: top.imageData.data[firstNewPixelIndex + 3]\n        }, x, y, {\n          blendingMode: top.blendingMode\n        });\n\n        if (pixelResult !== false) // if skip change\n        {\n          bottom.imageData.data[firstOldPixelIndex + 0] = pixelResult.r;\n          bottom.imageData.data[firstOldPixelIndex + 1] = pixelResult.g;\n          bottom.imageData.data[firstOldPixelIndex + 2] = pixelResult.b;\n          bottom.imageData.data[firstOldPixelIndex + 3] = pixelResult.a;\n        }\n      }\n    }\n  }\n  return bottom.imageData;\n}\n\nexport function mergePixelCallback(bottomPixel, topPixel, x, y, parameters) {\n  if (topPixel.a === 0) {\n    return false; // skip change - opacity is full\n  }\n\n  // alpha compositing\n  let mergedR,\n    mergedG,\n    mergedB,\n    mergedA = topPixel.a / 255,\n    rootA = bottomPixel.a / 255 * (1 - mergedA),\n    outA = (mergedA + bottomPixel.a * (1 - mergedA) / 255);\n\n  switch (parameters.blendingMode) {\n    case \"lighten\":\n    case \"darken\":\n    case \"multiply\":\n    case \"average\":\n    case \"add\":\n    case \"subtract\":\n    case \"difference\":\n    case \"negation\":\n    case \"screen\":\n    case \"exclusion\":\n    case \"overlay\":\n    case \"softLight\":\n    case \"hardLight\":\n    case \"colorDodge\":\n    case \"colorBurn\":\n    case \"linearDodge\":\n    case \"linearBurn\":\n    case \"linearLight\":\n    case \"vividLight\":\n    case \"pinLight\":\n    case \"hardMix\":\n    case \"reflect\":\n    case \"glow\":\n    case \"phoenix\":\n      topPixel.r = blendingModes[parameters.blendingMode](bottomPixel.r, topPixel.r);\n      topPixel.g = blendingModes[parameters.blendingMode](bottomPixel.g, topPixel.g);\n      topPixel.b = blendingModes[parameters.blendingMode](bottomPixel.b, topPixel.b);\n      break;\n\n    default:\n      break;\n  }\n\n  let rootR = bottomPixel.r;\n  let rootG = bottomPixel.g;\n  let rootB = bottomPixel.b;\n\n  mergedR = topPixel.r * mergedA + rootR * rootA;\n  mergedG = topPixel.g * mergedA + rootG * rootA;\n  mergedB = topPixel.b * mergedA + rootB * rootA;\n\n  mergedR = outA == 0 ? 0 : mergedR / outA;\n  mergedG = outA == 0 ? 0 : mergedG / outA;\n  mergedB = outA == 0 ? 0 : mergedB / outA;\n\n  return {\n    r: Math.min(Math.max(0, mergedR), 255) | 0,\n    g: Math.min(Math.max(0, mergedG), 255) | 0,\n    b: Math.min(Math.max(0, mergedB), 255) | 0,\n    a: (255 * outA) | 0\n  }\n}\n\nexport function cropImageData(oldImageData, newImageData, startX, startY, width, height) {\n  let oldWidth = oldImageData.width,\n    newWidth = newImageData.width,\n    x, y, xx, yy,\n    firstOldPixelIndex, firstNewPixelIndex;\n\n  for (y = startY, yy = 0; y < startY + height && yy < height; y += 1, yy += 1) {\n    for (x = startX, xx = 0; x < startX + width && xx < width; x += 1, xx += 1) {\n      firstOldPixelIndex = y * oldWidth * 4 + x * 4;\n      firstNewPixelIndex = yy * newWidth * 4 + xx * 4;\n\n      newImageData.data[firstNewPixelIndex] = oldImageData.data[firstOldPixelIndex];\n      newImageData.data[firstNewPixelIndex + 1] = oldImageData.data[firstOldPixelIndex + 1];\n      newImageData.data[firstNewPixelIndex + 2] = oldImageData.data[firstOldPixelIndex + 2];\n      newImageData.data[firstNewPixelIndex + 3] = oldImageData.data[firstOldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function mod(a, b) {\n  var n = Math.floor(a / b);\n  a -= n * b;\n  if (a < 0) {\n    return a + b;\n  }\n  return a;\n}\n\nexport function triangle(x) {\n  var r = mod(x, 1);\n  return 2 * (r < 0.5 ? r : 1 - r);\n}\n\nexport function smoothStep(a, b, x) {\n  if (x < a) {\n    return 0;\n  }\n  if (x >= b) {\n    return 1;\n  }\n  x = (x - a) / (b - a);\n  return x * x * (3 - 2 * x);\n}\n\nexport function brightness(pixel) {\n  return (pixel.r + pixel.g + pixel.b) / 3;\n}\n\nexport function isNode() {\n  return typeof window == 'undefined';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helpers/common.js\n// module id = 2\n// module chunks = 0","import BaseEffect from './Base';\nimport extend from 'extend';\n\nclass BaseCustomEffect extends BaseEffect {\n  callback(pixel, x, y, parameters, width, height) {\n    throw \"Extend it.\"\n  }\n\n  run(imageData, parameters) {\n\n    parameters = extend(true, {}, this.getDefaultParameters(), parameters);\n\n    var imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex(x, y) {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = { // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (x, y) {\n          var index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3]\n          };\n        },\n        /**\n         * Get pixel by its index\n         * @param index\n         */\n        getOriginalPixelByIndex: function (index) {\n          index *= 4;\n          return {\n            r: imageData.data[index],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3]\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (x, y) {\n          var index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3]\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (x, y, rgba) {\n          var index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Set pixel by index.\n         * @param index\n         * @param rgba\n         */\n        setPixelByIndex: function (index, rgba) {\n          index *= 4;\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height\n      };\n\n    sandbox.data = this.before.call(sandbox, parameters, imageData.width, imageData.height, imageData);\n\n    this.callback.call(sandbox, imageData.width, imageData.height, parameters);\n\n    imageData.data.set(imageDataCopy);\n\n    return imageData;\n  }\n}\n\nexport default BaseCustomEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/BaseCustom.js\n// module id = 3\n// module chunks = 0","let parameters = {},\n  isInit = false;\n\nlet noise = {\n  init: function () {\n    if (isInit) {\n      return false;\n    }\n    isInit = true;\n\n    parameters.B = 0x100;\n    parameters.BM = 0xff;\n    parameters.N = 0x1000;\n\n    parameters.P = new Array(parameters.B + parameters.B + 2);\n    parameters.G1 = new Array(parameters.B + parameters.B + 2);\n    parameters.G2 = new Array(parameters.B + parameters.B + 2);\n    for (i = 0; i < parameters.G2.length; i += 1) {\n      parameters.G2[i] = new Array(2);\n    }\n    parameters.G3 = new Array(parameters.B + parameters.B + 2);\n    for (i = 0; i < parameters.G3.length; i += 1) {\n      parameters.G3[i] = new Array(3);\n    }\n    var i, j, k;\n\n    for (i = 0; i < parameters.B; i += 1) {\n      parameters.P[i] = i;\n      parameters.G1[i] = ((this.random() % (parameters.B + parameters.B)) - parameters.B) / parameters.B;\n      parameters.G2[i] = [];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[i][j] = ((this.random() % (parameters.B + parameters.B)) - parameters.B) / parameters.B;\n      }\n      parameters.G2[i] = this.normalize2(parameters.G2[i]);\n\n      parameters.G3[i] = [];\n      for (j = 0; j < 3; j += 1) {\n        parameters.G3[i][j] = ((this.random() % (parameters.B + parameters.B)) - parameters.B) / parameters.B;\n      }\n      parameters.G3[i] = this.normalize3(parameters.G3[i]);\n    }\n\n    for (i = parameters.B - 1; i >= 0; i -= 1) {\n      k = parameters.P[i];\n      parameters.P[i] = parameters.P[j = this.random() % parameters.B];\n      parameters.P[j] = k;\n    }\n\n    for (i = 0; i < parameters.B + 2; i += 1) {\n      parameters.P[parameters.B + i] = parameters.P[i];\n      parameters.G1[parameters.B + i] = parameters.G1[i];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[parameters.B + i][j] = parameters.G2[i][j];\n      }\n      for (j = 0; j < 3; j++) {\n        parameters.G3[parameters.B + i][j] = parameters.G3[i][j];\n      }\n    }\n  },\n  random: function () {\n    return parseInt(Math.random() * 256 * 256) & 0x7fffffff;\n  },\n  normalize2: function (arr) {\n    var s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1] + arr[2] * arr[2]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    arr[2] = arr[2] / s;\n    return arr;\n  },\n  normalize3: function (arr) {\n    var s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    return arr;\n  },\n  sCurve: function (t) {\n    return t * t * (3.0 - 2.0 * t);\n  },\n  lerp: function (t, a, b) {\n    return a + t * (b - a);\n  },\n  /**\n   * Compute 1-dimensional Perlin noise.\n   * @param x\n   */\n  noise1: function (x) {\n    var bx0, bx1,\n      rx0, rx1, sx, t, u, v;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    sx = this.sCurve(rx0);\n\n    u = rx0 * parameters.G1[parameters.P[bx0]];\n    v = rx1 * parameters.G1[parameters.P[bx1]];\n\n    return 2.3 * this.lerp(sx, u, v);\n  },\n  /**\n   * Compute 2-dimensional Perlin noise\n   * @param x\n   * @param y\n   * @returns {number}\n   */\n  noise2: function (x, y) {\n    var bx0, bx1, by0, by1, b00, b10, b01, b11,\n      rx0, rx1, ry0, ry1, q = [], sx, sy, a, b, t, u, v,\n      i, j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    sx = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n\n    q = parameters.G2[b00];\n    u = rx0 * q[0] + ry0 * q[1];\n    q = parameters.G2[b10];\n    v = rx1 * q[0] + ry0 * q[1];\n    a = this.lerp(sx, u, v);\n\n    q = parameters.G2[b01];\n    u = rx0 * q[0] + ry1 * q[1];\n    q = parameters.G2[b11];\n    v = rx1 * q[0] + ry1 * q[1];\n    b = this.lerp(sx, u, v);\n\n    return 1.5 * this.lerp(sy, a, b);\n  },\n  /**\n   * Compute 3-dimensional Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   */\n  noise3: function (x, y, z) {\n    var bx0, bx1, by0, by1, bz0, bz1, b00, b10, b01, b11,\n      rx0, rx1, ry0, ry1, rz0, rz1, q, sy, sz, a, b, c, d, t, u, v,\n      i, j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    t = z + parameters.N;\n    bz0 = parseInt(t) & parameters.BM;\n    bz1 = (bz0 + 1) & parameters.BM;\n    rz0 = t - parseInt(t);\n    rz1 = rz0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    t = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n    sz = this.sCurve(rz0);\n\n    q = parameters.G3[b00 + bz0];\n    u = rx0 * q[0] + ry0 * q[1] + rz0 * q[2];\n    q = parameters.G3[b10 + bz0];\n    v = rx1 * q[0] + ry0 * q[1] + rz0 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz0];\n    u = rx0 * q[0] + ry1 * q[1] + rz0 * q[2];\n    q = parameters.G3[b11 + bz0];\n    v = rx1 * q[0] + ry1 * q[1] + rz0 * q[2];\n    b = this.lerp(t, u, v);\n\n    c = this.lerp(sy, a, b);\n\n    q = parameters.G3[b00 + bz1];\n    u = rx0 * q[0] + ry0 * q[1] + rz1 * q[2];\n    q = parameters.G3[b10 + bz1];\n    v = rx1 * q[0] + ry0 * q[1] + rz1 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz1];\n    u = rx0 * q[0] + ry1 * q[1] + rz1 * q[2];\n    q = parameters.G3[b11 + bz1];\n    v = rx1 * q[0] + ry1 * q[1] + rz1 * q[2];\n    b = this.lerp(t, u, v);\n\n    d = this.lerp(sy, a, b);\n\n    return 1.5 * this.lerp(sz, c, d);\n  },\n  /**\n   * Compute turbulence using Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   * @param octaves\n   * @returns {*}\n   */\n  turbulence3: function (x, y, z, octaves) {\n    var t = 0,\n      i;\n    for (i = 1; i <= octaves; i *= 2) {\n      t += Math.abs(this.noise3(i * x, i * y, i * z)) / i;\n    }\n    return t;\n  }\n};\n\nexport default noise;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helpers/noise.js\n// module id = 4\n// module chunks = 0","import {isNode} from '../helpers/common';\n\nclass CanvasWrapper {\n  constructor(width, height) {\n    this.canvas = null;\n    this.context = null;\n    this.width = 0;\n    this.height = 0;\n    this.initialize(width, height);\n  }\n\n  initialize(width = 0, height = 0) {\n    if (isNode()) {\n      let Canvas = require('canvas');\n      this.canvas = new Canvas(width, height);\n    } else {\n      this.canvas = document.createElement(\"canvas\");\n\n      // hide from viewport\n      this.canvas.style.position = \"absolute\";\n      this.canvas.style.left = \"-99999px\";\n      this.canvas.style.top = \"-99999px\";\n\n      this.setWidth(width);\n      this.setHeight(height);\n\n      document.body.appendChild(this.canvas);\n    }\n  }\n\n  setWidth(value) {\n    this.canvas.setAttribute(\"width\", \"\" + value);\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value) {\n    this.canvas.setAttribute(\"height\", \"\" + value);\n    this.height = value;\n    return this;\n  }\n\n  getContext() {\n    if (!this.context) {\n      this.context = this.canvas.getContext(\"2d\");\n    }\n    return this.context;\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  toDataURL(type) {\n    return this.canvas.toDataURL(type);\n  }\n\n  destroy() {\n    if (!isNode()) {\n      document.body.removeChild(this.canvas);\n    }\n    this.canvas = null;\n    this.context = null;\n  }\n}\n\nexport default CanvasWrapper;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/CanvasWrapper.js\n// module id = 5\n// module chunks = 0","/**\n * RGB to HSB color convert.\n * @param r\n * @param g\n * @param b\n * @returns {{h: number, s: number, b: number}}\n */\nexport function RGBtoHSB(r, g, b) {\n  var hue, saturation, brightness,\n    cmax = Math.max(r, g, b),\n    cmin = Math.min(r, g, b);\n\n  brightness = cmax / 255;\n  if (cmax !== 0) {\n    saturation = (cmax - cmin) / cmax;\n  }\n  else {\n    saturation = 0;\n  }\n\n  if (saturation === 0) {\n    hue = 0;\n  }\n  else {\n    var redc = (cmax - r) / (cmax - cmin),\n      greenc = (cmax - g) / (cmax - cmin),\n      bluec = (cmax - b) / (cmax - cmin);\n\n    if (r === cmax) {\n      hue = bluec - greenc;\n    }\n    else {\n      if (g === cmax) {\n        hue = 2 + redc - bluec;\n      }\n      else {\n        hue = 4 + greenc - redc;\n      }\n    }\n\n    hue /= 6;\n    if (hue < 0) {\n      hue += 1;\n    }\n  }\n\n  return {\n    h: hue,\n    s: saturation,\n    b: brightness\n  };\n}\n/**\n * HSB to RGB color convert.\n * @param hue\n * @param saturation\n * @param brightness\n * @returns {{r: Number, g: Number, b: Number}}\n */\nexport function HSBtoRGB(hue, saturation, brightness) {\n  var red, green, blue;\n  if (saturation === 0) {\n    red = brightness * 255 + 0.5;\n    green = brightness * 255 + 0.5;\n    blue = brightness * 255 + 0.5;\n  }\n  else {\n    var h = (hue - Math.floor(hue)) * 6,\n      f = h - Math.floor(h),\n      p = brightness * (1 - saturation),\n      q = brightness * (1 - saturation * f),\n      t = brightness * (1 - (saturation * (1 - f)));\n\n    switch (parseInt(h)) {\n      case 0:\n        red = (brightness * 255 + 0.5);\n        green = (t * 255 + 0.5);\n        blue = (p * 255 + 0.5);\n        break;\n\n      case 1:\n        red = (q * 255 + 0.5);\n        green = (brightness * 255 + 0.5);\n        blue = (p * 255 + 0.5);\n        break;\n\n      case 2:\n        red = (p * 255 + 0.5);\n        green = (brightness * 255 + 0.5);\n        blue = (t * 255 + 0.5);\n        break;\n\n      case 3:\n        red = (p * 255 + 0.5);\n        green = (q * 255 + 0.5);\n        blue = (brightness * 255 + 0.5);\n        break;\n\n      case 4:\n        red = (t * 255 + 0.5);\n        green = (p * 255 + 0.5);\n        blue = (brightness * 255 + 0.5);\n        break;\n\n      case 5:\n        red = (brightness * 255 + 0.5);\n        green = (p * 255 + 0.5);\n        blue = (q * 255 + 0.5);\n        break;\n\n      default:\n        red = 0;\n        green = 0;\n        blue = 0;\n        break;\n    }\n  }\n  return {\n    r: parseInt(red),\n    g: parseInt(green),\n    b: parseInt(blue)\n  };\n}\n\nexport function mixColors(t, rgb1, rgb2) {\n  return {\n    r: rgb1.r + t * (rgb2.r - rgb1.r),\n    g: rgb1.g + t * (rgb2.g - rgb1.g),\n    b: rgb1.b + t * (rgb2.b - rgb1.b),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  }\n}\n\nexport function hexToRGB(hex) {\n  hex = parseInt(hex.replace(\"#\", \"\"), 16);\n  var r = hex >> 16;\n  var g = hex >> 8 & 0xFF;\n  var b = hex & 0xFF;\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n}\n\nexport function RGBtoHex(pixel) {\n  var bin = pixel.r << 16 | pixel.g << 8 | pixel.b;\n  return (function (h) {\n    return new Array(7 - h.length).join(\"0\") + h\n  })(bin.toString(16).toUpperCase())\n}\n\nexport function RGBtoXYZ(r, g, b) {\n  var var_R = ( r / 255 );\n  var var_G = ( g / 255 );\n  var var_B = ( b / 255 );\n\n  if (var_R > 0.04045) {\n    var_R = Math.pow(( var_R + 0.055 ) / 1.055, 2.4);\n  }\n  else {\n    var_R = var_R / 12.92;\n  }\n\n  if (var_G > 0.04045) {\n    var_G = Math.pow(( var_G + 0.055 ) / 1.055, 2.4);\n  }\n  else {\n    var_G = var_G / 12.92;\n  }\n\n  if (var_B > 0.04045) {\n    var_B = Math.pow(( var_B + 0.055 ) / 1.055, 2.4);\n  }\n  else {\n    var_B = var_B / 12.92;\n  }\n\n  var_R = var_R * 100;\n  var_G = var_G * 100;\n  var_B = var_B * 100;\n\n  return {\n    x: var_R * 0.4124 + var_G * 0.3576 + var_B * 0.1805,\n    y: var_R * 0.2126 + var_G * 0.7152 + var_B * 0.0722,\n    z: var_R * 0.0193 + var_G * 0.1192 + var_B * 0.9505\n  };\n}\n\nexport function RGBtoCIELab(r, g, b) {\n  var xyz = RGBtoXYZ(r, g, b);\n\n  var var_X = xyz.x / 95.047; // ref\n  var var_Y = xyz.y / 100; // ref\n  var var_Z = xyz.z / 108.883; // ref\n\n  if (var_X > 0.008856) {\n    var_X = Math.pow(var_X, ( 1 / 3 ));\n  }\n  else {\n    var_X = ( 7.787 * var_X ) + ( 16 / 116 );\n  }\n\n  if (var_Y > 0.008856) {\n    var_Y = Math.pow(var_Y, ( 1 / 3 ));\n  }\n  else {\n    var_Y = ( 7.787 * var_Y ) + ( 16 / 116 );\n  }\n\n  if (var_Z > 0.008856) {\n    var_Z = Math.pow(var_Z, ( 1 / 3 ));\n  }\n  else {\n    var_Z = ( 7.787 * var_Z ) + ( 16 / 116 );\n  }\n\n  return {\n    l: ( 116 * var_Y ) - 16,\n    a: 500 * ( var_X - var_Y ),\n    b: 200 * ( var_Y - var_Z )\n  };\n}\n\nexport function CIELabToXYZ(l, a, b) {\n  var var_Y = ( l + 16 ) / 116;\n  var var_X = a / 500 + var_Y;\n  var var_Z = var_Y - b / 200;\n\n  if (Math.pow(var_Y, 3) > 0.008856) {\n    var_Y = Math.pow(var_Y, 3);\n  }\n  else {\n    var_Y = ( var_Y - 16 / 116 ) / 7.787;\n  }\n\n  if (Math.pow(var_X, 3) > 0.008856) {\n    var_X = Math.pow(var_X, 3);\n  }\n  else {\n    var_X = ( var_X - 16 / 116 ) / 7.787;\n  }\n\n  if (Math.pow(var_Z, 3) > 0.008856) {\n    var_Z = Math.pow(var_Z, 3);\n  }\n  else {\n    var_Z = ( var_Z - 16 / 116 ) / 7.787;\n  }\n\n  return {\n    x: 95.047 * var_X, // ref\n    y: 100 * var_Y, // ref\n    z: 108.883 * var_Z // ref\n  };\n}\n\nexport function CIELabToRGB(l, a, b) {\n  var xyz = CIELabToXYZ(l, a, b);\n\n  var var_X = xyz.x / 100;\n  var var_Y = xyz.y / 100;\n  var var_Z = xyz.z / 100;\n\n  var var_R = var_X * 3.2406 + var_Y * -1.5372 + var_Z * -0.4986;\n  var var_G = var_X * -0.9689 + var_Y * 1.8758 + var_Z * 0.0415;\n  var var_B = var_X * 0.0557 + var_Y * -0.2040 + var_Z * 1.0570;\n\n  if (var_R > 0.0031308) {\n    var_R = 1.055 * ( Math.pow(var_R, ( 1 / 2.4 )) ) - 0.055;\n  }\n  else {\n    var_R = 12.92 * var_R;\n  }\n\n  if (var_G > 0.0031308) {\n    var_G = 1.055 * ( Math.pow(var_G, ( 1 / 2.4 )) ) - 0.055;\n  }\n  else {\n    var_G = 12.92 * var_G;\n  }\n\n  if (var_B > 0.0031308) {\n    var_B = 1.055 * ( Math.pow(var_B, ( 1 / 2.4 )) ) - 0.055;\n  }\n  else {\n    var_B = 12.92 * var_B;\n  }\n\n  return {\n    r: var_R * 255,\n    g: var_G * 255,\n    b: var_B * 255\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helpers/color.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extend/index.js\n// module id = 7\n// module chunks = 0","import GrayScale from './effects/point/GrayScale';\nimport Sepia from './effects/point/Sepia';\nimport Contrast from './effects/point/Contrast';\nimport Brightness from './effects/point/Brightness';\nimport Diffusion from './effects/point/Diffusion';\nimport Dither from './effects/point/Dither';\nimport Exposure from './effects/point/Exposure';\nimport Gain from './effects/point/Gain';\nimport Gamma from './effects/point/Gamma';\nimport HSBAdjust from './effects/point/HSBAdjust';\nimport InvertAlpha from './effects/point/InvertAlpha';\nimport Invert from './effects/point/Invert';\nimport Levels from './effects/point/Levels';\nimport Rescale from './effects/point/Rescale';\nimport Solarize from './effects/point/Solarize';\nimport Threshold from './effects/point/Threshold';\nimport Tritone from './effects/point/Tritone';\nimport Dissolve from './effects/point/Dissolve';\nimport Edge from './effects/point/Edge';\nimport ChannelMix from './effects/point/ChannelMix';\nimport AutoContrast from './effects/point/AutoContrast';\n\nimport Diffuse from './effects/transform/Diffuse';\nimport Kaleidoscope from './effects/transform/Kaleidoscope';\nimport Marble from './effects/transform/Marble';\nimport Pinch from './effects/transform/Pinch';\nimport Ripple from './effects/transform/Ripple';\nimport Shear from './effects/transform/Shear';\nimport Sphere from './effects/transform/Sphere';\nimport Swim from './effects/transform/Swim';\nimport Twirl from './effects/transform/Twirl';\nimport Water from './effects/transform/Water';\nimport Circle from './effects/transform/Circle';\nimport Rotate from './effects/transform/Rotate';\nimport Offset from './effects/transform/Offset';\nimport Polar from './effects/transform/Polar';\nimport Perspective from './effects/transform/Perspective';\n\nimport AutoWhiteBalance from './effects/custom/AutoWhiteBalance';\nimport FillColor from './effects/custom/FillColor';\nimport Flip from './effects/custom/Flip';\nimport Block from './effects/custom/Block';\nimport Border from './effects/custom/Border';\nimport Emboss from './effects/custom/Emboss';\nimport ComponentStretching from './effects/custom/ComponentStretching';\n\nlet availableEffects = {};\n\nfunction add(_class) {\n  if (availableEffects[_class.getName()]) {\n    throw `Effect: ${_class.getName()} exists already!`;\n  }\n  availableEffects[_class.getName()] = _class;\n}\n\nadd(GrayScale);\nadd(Sepia);\nadd(Contrast);\nadd(Brightness);\nadd(Diffusion);\nadd(Dither);\nadd(Exposure);\nadd(Gain);\nadd(Gamma);\nadd(HSBAdjust);\nadd(InvertAlpha);\nadd(Invert);\nadd(Levels);\nadd(Rescale);\nadd(Solarize);\nadd(Threshold);\nadd(Tritone);\nadd(Diffuse);\nadd(Dissolve);\nadd(Kaleidoscope);\nadd(Marble);\nadd(Pinch);\nadd(Ripple);\nadd(Shear);\nadd(Sphere);\nadd(Swim);\nadd(Twirl);\nadd(Water);\nadd(Edge);\nadd(ChannelMix);\nadd(Circle);\nadd(Rotate);\nadd(Offset);\nadd(Polar);\nadd(Perspective);\nadd(AutoContrast);\nadd(AutoWhiteBalance);\nadd(FillColor);\nadd(Flip);\nadd(Block);\nadd(Border);\nadd(Emboss);\nadd(ComponentStretching);\n\nclass EffectsRepository {\n  static get(name) {\n    return availableEffects[name];\n  }\n}\n\nexport default EffectsRepository;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/EffectsRepository.js\n// module id = 8\n// module chunks = 0","class BaseEffect {\n  constructor(opts = {}) {\n    this.opts = opts;\n  }\n\n  getDefaultParameters() {\n    return {};\n  }\n\n  before(parameters, width, height, imageData) {\n    return {};\n  }\n\n  static getName() {\n    throw 'Extend it.';\n  }\n}\n\nexport default BaseEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/Base.js\n// module id = 9\n// module chunks = 0","module.exports = require(\"canvas\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"canvas\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 11\n// module chunks = 0","import Project from './classes/Project';\nimport Image from './classes/Image';\nimport {isNode} from './helpers/common';\n\nexport {\n  Project,\n  Image\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 12\n// module chunks = 0","import CanvasWrapper from './CanvasWrapper'\nimport {\n  resizeNearestNeighbour,\n  resizeBilinearInterpolation,\n  resizeBiquadraticInterpolation\n} from '../helpers/resize'\n\nclass BaseOnLayerObject {\n  constructor() {\n    this.imageData = null;\n    this.canvas = null;\n    this.width = 0;\n    this.height = 0;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  setWidth(value) {\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value) {\n    this.height = value;\n    return this;\n  }\n\n  getImageData() {\n    if (!this.imageData) {\n      this.imageData = this.canvas.getContext().getImageData(0, 0, this.getWidth(), this.getHeight());\n    }\n    return this.imageData;\n  }\n\n  setImageData(value) {\n    this.imageData = value;\n    return this;\n  }\n\n  resize(newWidth, newHeight, mode = 'nearest-neighbour') {\n    let oldImageData = this.getImageData(),\n      canvas = new CanvasWrapper(newWidth, newHeight),\n      newImageData = canvas.getContext().createImageData(newWidth, newHeight);\n\n    switch (mode) {\n      case \"nearest-neighbour\":\n        newImageData = resizeNearestNeighbour(oldImageData, newImageData, newWidth, newHeight);\n        break;\n\n      case \"bilinear-interpolation\":\n        newImageData = resizeBilinearInterpolation(oldImageData, newImageData, newWidth, newHeight);\n        break;\n\n      case \"biquadratic-interpolation\":\n        newImageData = resizeBiquadraticInterpolation(oldImageData, newImageData, newWidth, newHeight);\n        break;\n\n      default:\n        canvas.destroy();\n        return this;\n    }\n\n    canvas.destroy();\n\n    return this.setWidth(newWidth)\n      .setHeight(newHeight)\n      .setImageData(newImageData);\n  }\n}\n\nexport default BaseOnLayerObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/BaseOnLayer.js\n// module id = 13\n// module chunks = 0","import BaseOnLayerObject from './BaseOnLayer';\nimport CanvasWrapper from './CanvasWrapper';\nimport {isNode} from '../helpers/common';\n\nclass Image extends BaseOnLayerObject {\n  constructor() {\n    super();\n    this.url = null;\n\n    if (isNode()) {\n      let canvas = require('canvas');\n      this.image = new canvas.Image();\n    }\n    else {\n      this.image = new window.Image();\n\n      // hide from viewport\n      this.image.style.position = \"absolute\";\n      this.image.style.left = \"-99999px\";\n      this.image.style.top = \"-99999px\";\n    }\n  }\n\n  load(url, callback) {\n    let load = () => {\n      this.setWidth(isNode() ? this.image.width : this.image.clientWidth);\n      this.setHeight(isNode() ? this.image.height : this.image.clientHeight);\n\n      // get image data\n      this.canvas = new CanvasWrapper(this.getWidth(), this.getHeight());\n      this.canvas.getContext().drawImage(this.image, 0, 0, this.getWidth(), this.getHeight());\n\n      if (!isNode()) {\n        document.body.removeChild(this.image);\n      }\n\n      if (typeof callback === \"function\") {\n        callback.call(this);\n      }\n    };\n\n    this.url = url;\n\n    if (!isNode()) {\n      document.body.appendChild(this.image);\n      this.image.onload = function () {\n        load();\n      };\n      this.image.src = url;\n    }\n    else {\n      let fs = require(\"fs\");\n      this.image.src = fs.readFileSync(url);\n      load();\n    }\n  }\n}\n\nexport default Image;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/Image.js\n// module id = 14\n// module chunks = 0","import CanvasWrapper from './CanvasWrapper';\nimport LayerObject from './LayerObject';\nimport {\n  mergeImageData,\n  mergePixelCallback\n} from '../helpers/common';\nimport EffectsRepository from './EffectsRepository';\n\nclass Layer {\n  constructor(width, height, parameters = {}) {\n    this.objects = [];\n    this.effects = [];\n    this.x = 0;\n    this.y = 0;\n    this.initialize(width, height, parameters);\n\n    if (parameters.background_color && parameters.background_color !== \"transparent\") {\n      this.applyEffect(\"fill-color\", {\n        color: parameters.background_color\n      });\n    }\n  }\n\n  initialize(width, height, parameters) {\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().createImageData(width, height);\n    this.width = width;\n    this.height = height;\n    this.parameters = parameters;\n  }\n\n  put(obj, x, y) {\n    let put = new LayerObject(obj, this, x, y, {});\n    this.objects.push(put);\n    return put;\n  }\n\n  exportTo(selector, imageType = 'image/png') {\n    this.exportLayer();\n\n    let container = document.querySelector(selector),\n      exportedImage = new Image();\n\n    exportedImage.src = canvas.toDataURL(imageType);\n    container.appendChild(exportedImage);\n  }\n\n  exportLayer() {\n    let i,\n      layerObject;\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      layerObject = this.objects[i];\n      this.imageData = mergeImageData({\n        width: this.width,\n        height: this.height,\n        imageData: this.imageData\n      }, {\n        x: layerObject.getX(),\n        y: layerObject.getY(),\n        width: layerObject.getWidth(),\n        height: layerObject.getHeight(),\n        imageData: layerObject.exportObject()\n      }, mergePixelCallback);\n    }\n\n    for (i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(this.imageData, this.effects[i].params);\n    }\n\n    return this.imageData;\n  }\n\n  applyEffect(name, parameters) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name)),\n      parameters\n    });\n  }\n\n  resize(newWidth, newHeight, mode) {\n    let i;\n\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n\n    this.initialize(newWidth, newHeight, this.parameters);\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].resize(newWidth, newHeight, mode, true);\n    }\n\n    return this;\n  }\n\n  crop(startX, startY, width, height) {\n    let i;\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].crop(startX, startY, width, height);\n    }\n\n    return this;\n  }\n\n  moveXY(x, y) {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x) {\n    this.x += (x | 0);\n    return this;\n  }\n\n  moveY(y) {\n    this.y += (y | 0);\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  setBlendingMode(blendingMode) {\n    this.parameters.blendingMode = blendingMode;\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getParameter(name) {\n    return this.parameters[name];\n  }\n}\n\nexport default Layer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/Layer.js\n// module id = 15\n// module chunks = 0","import CanvasWrapper from './CanvasWrapper';\nimport {cropImageData} from '../helpers/common';\nimport EffectsRepository from './EffectsRepository';\n\nclass LayerObject {\n  constructor(obj, layer, x, y, opts) {\n    this.obj = obj;\n    this.layer = this;\n    this.x = x;\n    this.y = y;\n    this.opts = opts;\n    this.effects = [];\n  }\n\n  getObject() {\n    return this.obj;\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y\n  }\n\n  getWidth() {\n    return this.obj.getWidth();\n  }\n\n  getHeight() {\n    return this.obj.getHeight();\n  }\n\n  exportObject() {\n    let imageData = this.obj.getImageData();\n    for (let i = 0; i < this.effects.length; i += 1) {\n      imageData = this.effects[i].effect.run(imageData, this.effects[i].params);\n    }\n    return imageData;\n  }\n\n  applyEffect(name, parameters) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name)),\n      parameters\n    });\n  }\n\n  moveXY(x, y) {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x) {\n    this.x += (x | 0);\n    return this;\n  }\n\n  moveY(y) {\n    this.y += (y | 0);\n    return this;\n  }\n\n  setXY(x, y) {\n    this.setX(x);\n    this.setY(y);\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  resize(newWidth, newHeight, mode, isLayerResize) {\n    let oldWidth = this.getWidth(),\n      oldHeight = this.getHeight(),\n      ratioX = newWidth / oldWidth,\n      ratioY = newHeight / oldHeight;\n\n    if (isLayerResize) {\n      this.moveXY(-this.getX() * ratioX, -this.getY() * ratioY);\n    }\n\n    this.getObject().resize(newWidth, newHeight, mode);\n\n    return this;\n  }\n\n  crop(startX, startY, width, height) {\n    let object = this.getObject(),\n      oldImageData = object.getImageData(),\n      canvas = new CanvasWrapper(width, height),\n      newImageData = canvas.getContext().createImageData(width, height);\n\n    newImageData = cropImageData(oldImageData, newImageData, startX, startY, width, height);\n\n    object\n      .setImageData(newImageData)\n      .setWidth(width)\n      .setHeight(height);\n\n    this.setXY(startX, startY);\n\n    return this;\n  };\n}\n\nexport default LayerObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/LayerObject.js\n// module id = 16\n// module chunks = 0","import CanvasWrapper from './CanvasWrapper';\nimport Layer from './Layer';\nimport {\n  mergeImageData,\n  mergePixelCallback,\n  isNode\n} from '../helpers/common';\nimport EffectsRepository from './EffectsRepository';\n\nclass Project {\n  constructor(width, height, parameters = {}) {\n    this.imageData = null;\n    this.effects = [];\n    this.layers = [];\n    this.startTime = new Date();\n    this.initialize(width, height, parameters);\n  }\n\n  initialize(width, height, parameters) {\n    this.parameters = parameters;\n    this.width = width;\n    this.height = height;\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().getImageData(0, 0, width, height);\n  }\n\n  createLayer(parameters) {\n    let layer = new Layer(this.width, this.height, parameters);\n    this.layers.push(layer);\n    return layer;\n  }\n\n  getTime() {\n    let end = new Date();\n    return end.getTime() - this.startTime.getTime();\n  }\n\n  exportTo(selector, imageType = 'image/png') {\n    var i,\n      container,\n      exportedImage = isNode() ? null : new window.Image();\n\n    for (i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData({\n        width: this.width,\n        height: this.height,\n        imageData: this.imageData\n      }, {\n        x: this.layers[i].getX(),\n        y: this.layers[i].getY(),\n        width: this.layers[i].getWidth(),\n        height: this.layers[i].getHeight(),\n        imageData: this.layers[i].exportLayer(),\n        blendingMode: this.layers[i].getParameter(\"blendingMode\")\n      }, mergePixelCallback);\n    }\n\n    for (i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(this.imageData, this.effects[i].parameters);\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    if (isNode()) {\n      let fs = require(\"fs\"),\n        img = this.canvas.toDataURL(),\n        data = img.replace(/^data:image\\/\\w+;base64,/, \"\"),\n        buff = new Buffer(data, 'base64');\n\n      fs.writeFile(selector, buff);\n    }\n    else {\n      container = document.querySelector(selector);\n      exportedImage.src = this.canvas.toDataURL(imageType);\n      container.appendChild(exportedImage);\n    }\n  }\n\n  applyEffect(name, parameters = {}) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name)),\n      parameters\n    });\n  }\n\n  resize(newWidth, newHeight, mode) {\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n    this.initialize(newWidth, newHeight, mode);\n\n    for (let i = 0; i < this.layers.length; i += 1) {\n      this.layers[i].resize(newWidth, newHeight, mode);\n    }\n\n    return this;\n  }\n}\n\nexport default Project;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/Project.js\n// module id = 17\n// module chunks = 0","import BaseCustomEffect from '../BaseCustom';\nimport {\n  RGBtoCIELab,\n  CIELabToRGB\n} from '../../../helpers/color'\n\nclass AutoWhiteBalanceEffect extends BaseCustomEffect {\n  static getName() {\n    return 'auto-white-balance';\n  }\n\n  getDefaultParameters() {\n    return {\n      intensity: 50\n    };\n  }\n\n  callback(width, height, parameters) {\n    var x, y,\n      sumA = 0, sumB = 0,\n      pixel,\n      lab,\n      avgSumA, avgSumB,\n      aDelta, bDelta;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n        sumA += lab.a;\n        sumB += lab.b;\n      }\n    }\n\n    avgSumA = 0 - (sumA / (width * height));\n    avgSumB = 0 - (sumB / (width * height));\n\n    aDelta = avgSumA * (parameters.intensity / 100) * 1.1;\n    bDelta = avgSumB * (parameters.intensity / 100) * 1.1;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n\n        lab.a += aDelta;\n        lab.b += bDelta;\n\n        pixel = CIELabToRGB(lab.l, lab.a, lab.b);\n        pixel.a = this.getPixel(x, y).a;\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default AutoWhiteBalanceEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/custom/AutoWhiteBalance.js\n// module id = 18\n// module chunks = 0","import BaseCustomEffect from '../BaseCustom';\n\nclass BlockEffect extends BaseCustomEffect {\n  static getName() {\n    return 'block';\n  }\n\n  getDefaultParameters() {\n    return {\n      blockSize: 5\n    };\n  }\n\n  callback(width, height, parameters) {\n    var x, y,\n      w, h,\n      t,\n      r, g, b,\n      pixel,\n      by, bx;\n\n    for (y = 0; y < height; y += parameters.blockSize) {\n      for (x = 0; x < width; x += parameters.blockSize) {\n        w = Math.min(parameters.blockSize, width - x);\n        h = Math.min(parameters.blockSize, height - y);\n        t = w * h;\n\n        r = 0;\n        g = 0;\n        b = 0;\n\n        for (by = 0; by < h; by += 1) {\n          for (bx = 0; bx < w; bx += 1) {\n            pixel = this.getOriginalPixel(x + bx, y + by);\n\n            r += pixel.r & 0xFF;\n            g += pixel.g & 0XFF;\n            b += pixel.b & 0xFF;\n          }\n        }\n\n        r = r / t;\n        g = g / t;\n        b = b / t;\n\n        for (by = 0; by < h; by += 1) {\n          for (bx = 0; bx < w; bx += 1) {\n            this.setPixel(x + bx, y + by, {\n              r: r,\n              g: g,\n              b: b,\n              a: 255\n            });\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default BlockEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/custom/Block.js\n// module id = 19\n// module chunks = 0","import BaseCustomEffect from '../BaseCustom';\n\nclass BorderEffect extends BaseCustomEffect {\n  static getName() {\n    return 'border';\n  }\n\n  getDefaultParameters() {\n    return {\n      leftBorder: 10,\n      rightBorder: 10,\n      topBorder: 10,\n      bottomBorder: 10,\n      borderColor: {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 255\n      }\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      leftBorder: parameters.leftBorder | 0,\n      rightBorder: parameters.rightBorder | 0,\n      topBorder: parameters.rightBorder | 0,\n      bottomBorder: parameters.bottomBorder | 0\n    };\n  }\n\n  callback(width, height, parameters) {\n    var x, y;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        if (this.data.leftBorder > 0 && x < this.data.leftBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.rightBorder > 0 && width - this.data.rightBorder < x) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.topBorder > 0 && y < this.data.topBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.bottomBorder > 0 && height - this.data.bottomBorder < y) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n      }\n    }\n  }\n}\n\nexport default BorderEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/custom/Border.js\n// module id = 20\n// module chunks = 0","import BaseCustomEffect from '../BaseCustom';\n\nclass ComponentStretchingEffect extends BaseCustomEffect {\n  static getName() {\n    return 'component-stretching';\n  }\n\n  callback(width, height, parameters) {\n    var x, y,\n      minR = Infinity, minG = Infinity, minB = Infinity,\n      maxR = -1, maxG = -1, maxB = -1,\n      pixel,\n      remap = function remap(value, min, max) {\n        return (value - min) * 255 / (max - min);\n      };\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        minR = Math.min(pixel.r, minR);\n        minG = Math.min(pixel.g, minG);\n        minB = Math.min(pixel.b, minB);\n\n        maxR = Math.max(pixel.r, maxR);\n        maxG = Math.max(pixel.g, maxG);\n        maxB = Math.max(pixel.b, maxB);\n      }\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        pixel.r = remap(pixel.r, minR, maxR);\n        pixel.g = remap(pixel.g, minG, maxG);\n        pixel.b = remap(pixel.b, minB, maxB);\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default ComponentStretchingEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/custom/ComponentStretching.js\n// module id = 21\n// module chunks = 0","import BaseCustomEffect from '../BaseCustom';\nimport {\n  brightness,\n} from '../../../helpers/common'\n\nclass EmbossEffect extends BaseCustomEffect {\n  static getName() {\n    return 'emboss';\n  }\n\n  getDefaultParameters() {\n    return {\n      azimuth: 135 * Math.PI / 180,\n      elevation: 30 * Math.PI / 180,\n      width45: 3,\n      emboss: true\n    };\n  }\n\n  callback(width, height, parameters) {\n    var x, y,\n      bumpMapWidth = width,\n      bumpPixels = [],\n      Nx, Ny, Nz, Lx, Ly, Lz, Nz2, NzLz, NdotL,\n      s1, s2, s3,\n      shade, background,\n      pixelScale = 255.9,\n      bumpIndex = 0,\n      index = 0,\n      pixel,\n      r, g, b;\n\n    Lx = (Math.cos(parameters.azimuth) * Math.cos(parameters.elevation) * pixelScale) | 0;\n    Ly = (Math.sin(parameters.azimuth) * Math.cos(parameters.elevation) * pixelScale) | 0;\n    Lz = (Math.sin(parameters.elevation) * pixelScale) | 0;\n\n    Nz = (6 * 255 / parameters.width45) | 0;\n    Nz2 = Nz * Nz;\n    NzLz = Nz * Lz;\n\n    background = Lz;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        bumpPixels.push(brightness(this.getOriginalPixel(x, y)) | 0);\n      }\n    }\n\n    for (y = 0; y < height; y += 1, bumpIndex += bumpMapWidth) {\n      s1 = bumpIndex;\n      s2 = s1 + bumpMapWidth;\n      s3 = s2 + bumpMapWidth;\n\n      for (x = 0; x < width; x += 1, s1 += 1, s2 += 1, s3 += 1) {\n        if (y != 0 && y < height - 2 && x != 0 && x < width - 2) {\n          Nx = bumpPixels[s1 - 1] + bumpPixels[s2 - 1] + bumpPixels[s3 - 1] - bumpPixels[s1 + 1] - bumpPixels[s2 + 1] - bumpPixels[s3 + 1];\n          Ny = bumpPixels[s3 - 1] + bumpPixels[s3] + bumpPixels[s3 + 1] - bumpPixels[s1 - 1] - bumpPixels[s1] - bumpPixels[s1 + 1];\n\n          if (Nx == 0 && Ny == 0) {\n            shade = background;\n          }\n          else {\n            if ((NdotL = Nx * Lx + Ny * Ly + NzLz) < 0) {\n              shade = 0;\n            }\n            else {\n              shade = (NdotL / Math.sqrt(Nx * Nx + Ny * Ny + Nz2));\n            }\n          }\n        }\n        else {\n          shade = background;\n        }\n\n        if (parameters.emboss) {\n          pixel = this.getOriginalPixelByIndex(index);\n          r = (pixel.r * shade) >> 8;\n          g = (pixel.g * shade) >> 8;\n          b = (pixel.b * shade) >> 8;\n          this.setPixelByIndex(index++, {\n            r: r,\n            g: g,\n            b: b,\n            a: pixel.a\n          });\n        }\n        else {\n          this.setPixelByIndex(index++, {\n            r: shade,\n            g: shade << 8,\n            b: shade << 16,\n            a: 255\n          });\n        }\n      }\n    }\n  }\n}\n\nexport default EmbossEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/custom/Emboss.js\n// module id = 22\n// module chunks = 0","import BaseCustomEffect from '../BaseCustom';\nimport {\n  hexToRGB,\n} from '../../../helpers/color'\n\nclass FillColorEffect extends BaseCustomEffect {\n  static getName() {\n    return 'fill-color';\n  }\n\n  getDefaultParameters() {\n    return {\n      color: \"transparent\"\n    };\n  }\n\n  callback(width, height, parameters) {\n    var x, y, color;\n\n    if (parameters.color === \"transparent\") {\n      color = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0\n      };\n    }\n    else {\n      color = hexToRGB(parameters.color);\n      color.a = 255;\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        this.setPixel(x, y, color);\n      }\n    }\n  }\n}\n\nexport default FillColorEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/custom/FillColor.js\n// module id = 23\n// module chunks = 0","import BaseCustomEffect from '../BaseCustom';\n\nclass FlipEffect extends BaseCustomEffect {\n  static getName() {\n    return 'flip';\n  }\n\n  getDefaultParameters() {\n    return {\n      operation: \"FLIP_H\" // FLIP_H, FLIP_V, FLIP_HV, FLIP_90CW, FLIP_90CCW, FLIP_180\n    };\n  }\n\n  callback(width, height, parameters) {\n    var x = 0, y = 0,\n      w = width,\n      h = height,\n      newX = 0,\n      newY = 0,\n      newW = w,\n      newH = h,\n      newRow, newCol;\n\n    switch (parameters.operation) {\n      case \"FLIP_H\":\n        newX = width - (x + w);\n        break;\n      case \"FLIP_V\":\n        newY = height - (y + h);\n        break;\n      case \"FLIP_HV\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = x;\n        break;\n      case \"FLIP_90CW\":\n        newW = h;\n        newH = w;\n        newX = height - (y + h);\n        newY = x;\n        break;\n      case \"FLIP_90CCW\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = width - (x + w);\n        break;\n      case \"FLIP_180\":\n        newX = width - (x + w);\n        newY = height - (y + h);\n        break;\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        newRow = y;\n        newCol = x;\n\n        switch (parameters.operation) {\n          case \"FLIP_H\":\n            newCol = w - x - 1;\n            break;\n          case \"FLIP_V\":\n            newRow = h - y - 1;\n            break;\n          case \"FLIP_HV\":\n            newRow = x;\n            newCol = y;\n            break;\n          case \"FLIP_90CW\":\n            newRow = x;\n            newCol = h - y - 1;\n            break;\n          case \"FLIP_90CCW\":\n            newRow = w - x - 1;\n            newCol = y;\n            break;\n          case \"FLIP_180\":\n            newRow = h - y - 1;\n            newCol = w - x - 1;\n            break;\n        }\n\n        this.setPixel(newCol, newRow, this.getOriginalPixel(x, y));\n      }\n    }\n  }\n}\n\nexport default FlipEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/custom/Flip.js\n// module id = 24\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass AutoContrastEffect extends BasePointEffect {\n  static getName() {\n    return 'auto-contrast';\n  }\n\n  before(parameters, width, height) {\n    var x, y,\n      pixel,\n      min = Infinity, max = -1;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        min = Math.min((pixel.r + pixel.g + pixel.b) / 3, min);\n        max = Math.max((pixel.r + pixel.g + pixel.b) / 3, max);\n      }\n    }\n\n    return {\n      min: min,\n      max: max,\n      remap: function (value) {\n        return ((value) - min) * 255 / (max - min);\n      }\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = this.data.remap(pixel.r, this.data.min, this.data.max);\n    pixel.g = this.data.remap(pixel.g, this.data.min, this.data.max);\n    pixel.b = this.data.remap(pixel.b, this.data.min, this.data.max);\n\n    return pixel;\n  }\n}\n\nexport default AutoContrastEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/AutoContrast.js\n// module id = 25\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass BrightnessEffect extends BasePointEffect {\n  static getName() {\n    return 'brightness';\n  }\n\n  getDefaultParameters() {\n    return {\n      brightness: 0.5\n    };\n  }\n\n  before(parameters) {\n    return {\n      brightness: 255 * parameters.brightness\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = pixel.r + this.data.brightness;\n    pixel.g = pixel.g + this.data.brightness;\n    pixel.b = pixel.b + this.data.brightness;\n\n    return pixel;\n  }\n}\n\nexport default BrightnessEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Brightness.js\n// module id = 26\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass ChannelMixEffect extends BasePointEffect {\n  static getName() {\n    return 'channel-mix';\n  }\n\n  getDefaultParameters() {\n    return {\n      blueGreen: 1,\n      redBlue: 1,\n      greenRed: 1,\n      intoR: 1,\n      intoG: 1,\n      intoB: 1\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    var r = pixel.r,\n      g = pixel.g,\n      b = pixel.b;\n\n    return {\n      r: ((parameters.intoR * (parameters.blueGreen * g + (255 - parameters.blueGreen) * b) / 255 + (255 - parameters.intoR) * r) / 255),\n      g: ((parameters.intoG * (parameters.redBlue * g + (255 - parameters.redBlue) * r) / 255 + (255 - parameters.intoG) * g) / 255),\n      b: ((parameters.intoB * (parameters.greenRed * g + (255 - parameters.greenRed) * g) / 255 + (255 - parameters.intoB) * b) / 255),\n      a: pixel.a\n    };\n  }\n}\n\nexport default ChannelMixEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/ChannelMix.js\n// module id = 27\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass ContrastEffect extends BasePointEffect {\n  static getName() {\n    return 'contrast';\n  }\n\n  getDefaultParameters() {\n    return {\n      contrast: 0.5\n    };\n  }\n\n  before(parameters) {\n    return {\n      factor: (259 * ((parameters.contrast * 255) + 255)) / (255 * (259 - (parameters.contrast * 255)))\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = this.data.factor * (pixel.r - 128) + 128;\n    pixel.g = this.data.factor * (pixel.g - 128) + 128;\n    pixel.b = this.data.factor * (pixel.b - 128) + 128;\n\n    return pixel;\n  }\n}\n\nexport default ContrastEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Contrast.js\n// module id = 28\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass DiffusionEffect extends BasePointEffect {\n  static getName() {\n    return 'diffusion';\n  }\n\n  getDefaultParameters() {\n    return {\n      matrix: [0, 0, 0, 0, 0, 7, 3, 5, 1],\n      levels: 6,\n      colorDither: true,\n      granulate: true\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let i, sum = 0, map = [], div = [];\n\n    for (i = 0; i < parameters.matrix.length; i += 1) {\n      sum += parameters.matrix[i];\n    }\n\n    for (i = 0; i < parameters.levels; i += 1) {\n      map[i] = parseInt(255 * i / (parameters.levels - 1));\n    }\n\n    for (i = 0; i < 256; i += 1) {\n      div[i] = parseInt(parameters.levels * i / 256);\n    }\n\n    return {\n      sum: sum,\n      map: map,\n      div: div\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let red1 = pixel.r,\n      green1 = pixel.g,\n      blue1 = pixel.b,\n      red2, green2, blue2,\n      data = this.data,\n      tmpPixel,\n      tmpRed, tmpGreen, tmpBlue,\n      i, j,\n      iy, jx,\n      w,\n      grayScale;\n\n    if (!parameters.colorDither) {\n      grayScale = (red1 + green1 + blue1) / 3;\n      red1 = grayScale;\n      green1 = grayScale;\n      blue1 = grayScale;\n    }\n\n    red2 = data.map[data.div[red1]];\n    green2 = data.map[data.div[green1]];\n    blue2 = data.map[data.div[blue1]];\n\n    tmpRed = red1 - red2;\n    tmpGreen = green1 - green2;\n    tmpBlue = blue1 - blue2;\n\n    if (parameters.granulate) {\n      for (i = -1; i <= 1; i += 1) {\n        iy = i + y;\n        if (iy < 0 || iy >= height) {\n          continue;\n        }\n        for (j = -1; j <= 1; j += 1) {\n          jx = j + x;\n          if (jx < 0 || jx >= width) {\n            continue;\n          }\n          w = parameters.matrix[(i + 1) * 3 + j + 1];\n          if (w !== 0) {\n            tmpPixel = this.getPixel(jx, iy);\n            tmpPixel.r += (tmpRed * w / data.sum);\n            tmpPixel.g += (tmpGreen * w / data.sum);\n            tmpPixel.b += (tmpBlue * w / data.sum);\n            this.setPixel(jx, iy, tmpPixel);\n          }\n        }\n      }\n    }\n\n    return {\n      r: red2,\n      g: green2,\n      b: blue2,\n      a: pixel.a\n    };\n  }\n}\n\nexport default DiffusionEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Diffusion.js\n// module id = 29\n// module chunks = 0","import BasePointEffect from '../BasePoint';\nimport {smoothStep} from '../../../helpers/common';\n\nclass DissolveEffect extends BasePointEffect {\n  static getName() {\n    return 'dissolve';\n  }\n\n  getDefaultParameters() {\n    return {\n      density: 1,\n      softness: 0\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let d = (1 - parameters.density) * (1 + parameters.softness);\n    return {\n      minDensity: d - parameters.softness,\n      maxDensity: d\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let v = Math.random(),\n      f = smoothStep(this.data.minDensity, this.data.maxDensity, v);\n    pixel.a = pixel.a * f;\n    return pixel;\n  }\n}\n\nexport default DissolveEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Dissolve.js\n// module id = 30\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass DitherEffect extends BasePointEffect {\n  static getName() {\n    return 'dither';\n  }\n\n  getDefaultParameters() {\n    return {\n      matrices: {\n        ditherMagic4x4Matrix: [\n          0, 14, 3, 13,\n          11, 5, 8, 6,\n          12, 2, 15, 1,\n          7, 9, 4, 10\n        ],\n        ditherOrdered4x4Matrix: [\n          0, 8, 2, 10,\n          12, 4, 14, 6,\n          3, 11, 1, 9,\n          15, 7, 13, 5\n        ],\n        ditherLines4x4Matrix: [\n          0, 1, 2, 3,\n          4, 5, 6, 7,\n          8, 9, 10, 11,\n          12, 13, 14, 15\n        ],\n        dither90Halftone6x6Matrix: [\n          29, 18, 12, 19, 30, 34,\n          17, 7, 4, 8, 20, 28,\n          11, 3, 0, 1, 9, 27,\n          16, 6, 2, 5, 13, 26,\n          25, 15, 10, 14, 21, 31,\n          33, 25, 24, 23, 33, 36\n        ],\n        ditherOrdered6x6Matrix: [\n          1, 59, 15, 55, 2, 56, 12, 52,\n          33, 17, 47, 31, 34, 18, 44, 28,\n          9, 49, 5, 63, 10, 50, 6, 60,\n          41, 25, 37, 21, 42, 26, 38, 22,\n          3, 57, 13, 53, 0, 58, 14, 54,\n          35, 19, 45, 29, 32, 16, 46, 30,\n          11, 51, 7, 61, 8, 48, 4, 62,\n          43, 27, 39, 23, 40, 24, 36, 20\n        ],\n        ditherOrdered8x8Matrix: [\n          1, 235, 59, 219, 15, 231, 55, 215, 2, 232, 56, 216, 12, 228, 52, 212,\n          129, 65, 187, 123, 143, 79, 183, 119, 130, 66, 184, 120, 140, 76, 180, 116,\n          33, 193, 17, 251, 47, 207, 31, 247, 34, 194, 18, 248, 44, 204, 28, 244,\n          161, 97, 145, 81, 175, 111, 159, 95, 162, 98, 146, 82, 172, 108, 156, 92,\n          9, 225, 49, 209, 5, 239, 63, 223, 10, 226, 50, 210, 6, 236, 60, 220,\n          137, 73, 177, 113, 133, 69, 191, 127, 138, 74, 178, 114, 134, 70, 188, 124,\n          41, 201, 25, 241, 37, 197, 21, 255, 42, 202, 26, 242, 38, 198, 22, 252,\n          169, 105, 153, 89, 165, 101, 149, 85, 170, 106, 154, 90, 166, 102, 150, 86,\n          3, 233, 57, 217, 13, 229, 53, 213, 0, 234, 58, 218, 14, 230, 54, 214,\n          131, 67, 185, 121, 141, 77, 181, 117, 128, 64, 186, 122, 142, 78, 182, 118,\n          35, 195, 19, 249, 45, 205, 29, 245, 32, 192, 16, 250, 46, 206, 30, 246,\n          163, 99, 147, 83, 173, 109, 157, 93, 160, 96, 144, 80, 174, 110, 158, 94,\n          11, 227, 51, 211, 7, 237, 61, 221, 8, 224, 48, 208, 4, 238, 62, 222,\n          139, 75, 179, 115, 135, 71, 189, 125, 136, 72, 176, 112, 132, 68, 190, 126,\n          43, 203, 27, 243, 39, 199, 23, 253, 40, 200, 24, 240, 36, 196, 20, 254,\n          171, 107, 155, 91, 167, 103, 151, 87, 168, 104, 152, 88, 164, 100, 148, 84\n        ],\n        ditherCluster3Matrix: [\n          9, 11, 10, 8, 6, 7,\n          12, 17, 16, 5, 0, 1,\n          13, 14, 15, 4, 3, 2,\n          8, 6, 7, 9, 11, 10,\n          5, 0, 1, 12, 17, 16,\n          4, 3, 2, 13, 14, 15\n        ],\n        ditherCluster4Matrix: [\n          18, 20, 19, 16, 13, 11, 12, 15,\n          27, 28, 29, 22, 4, 3, 2, 9,\n          26, 31, 30, 21, 5, 0, 1, 10,\n          23, 25, 24, 17, 8, 6, 7, 14,\n          13, 11, 12, 15, 18, 20, 19, 16,\n          4, 3, 2, 9, 27, 28, 29, 22,\n          5, 0, 1, 10, 26, 31, 30, 21,\n          8, 6, 7, 14, 23, 25, 24, 17\n        ],\n        ditherCluster8Matrix: [\n          64, 69, 77, 87, 86, 76, 68, 67, 63, 58, 50, 40, 41, 51, 59, 60,\n          70, 94, 100, 109, 108, 99, 93, 75, 57, 33, 27, 18, 19, 28, 34, 52,\n          78, 101, 114, 116, 115, 112, 98, 83, 49, 26, 13, 11, 12, 15, 29, 44,\n          88, 110, 123, 124, 125, 118, 107, 85, 39, 17, 4, 3, 2, 9, 20, 42,\n          89, 111, 122, 127, 126, 117, 106, 84, 38, 16, 5, 0, 1, 10, 21, 43,\n          79, 102, 119, 121, 120, 113, 97, 82, 48, 25, 8, 6, 7, 14, 30, 45,\n          71, 95, 103, 104, 105, 96, 92, 74, 56, 32, 24, 23, 22, 31, 35, 53,\n          65, 72, 80, 90, 91, 81, 73, 66, 62, 55, 47, 37, 36, 46, 54, 61,\n          63, 58, 50, 40, 41, 51, 59, 60, 64, 69, 77, 87, 86, 76, 68, 67,\n          57, 33, 27, 18, 19, 28, 34, 52, 70, 94, 100, 109, 108, 99, 93, 75,\n          49, 26, 13, 11, 12, 15, 29, 44, 78, 101, 114, 116, 115, 112, 98, 83,\n          39, 17, 4, 3, 2, 9, 20, 42, 88, 110, 123, 124, 125, 118, 107, 85,\n          38, 16, 5, 0, 1, 10, 21, 43, 89, 111, 122, 127, 126, 117, 106, 84,\n          48, 25, 8, 6, 7, 14, 30, 45, 79, 102, 119, 121, 120, 113, 97, 82,\n          56, 32, 24, 23, 22, 31, 35, 53, 71, 95, 103, 104, 105, 96, 92, 74,\n          62, 55, 47, 37, 36, 46, 54, 61, 65, 72, 80, 90, 91, 81, 73, 66\n        ]\n      },\n      levels: 6,\n      matrix: \"ditherMagic4x4Matrix\",\n      colorDither: true\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let matrix = parameters.matrix,\n      rows, cols,\n      map = [], div = [], mod = [],\n      i;\n\n    if (typeof matrix === \"string\") {\n      matrix = parameters.matrices[matrix];\n    }\n\n    rows = Math.sqrt(matrix.length);\n    cols = Math.sqrt(matrix.length);\n\n    for (i = 0; i < parameters.levels; i += 1) {\n      map[i] = 255 * i / (parameters.levels - 1);\n    }\n\n    for (i = 0; i < 256; i += 1) {\n      div[i] = parseInt((parameters.levels - 1) * i / 256);\n      mod[i] = parseInt(i * (rows * cols + 1) / 256);\n    }\n\n    return {\n      matrix: matrix,\n      map: map,\n      div: div,\n      mod: mod,\n      cols: cols,\n      rows: rows\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let col = x % this.data.cols,\n      row = y % this.data.rows,\n      v = parameters.matrix[row * this.data.cols + col],\n      red = pixel.r, green = pixel.g, blue = pixel.b,\n      result = {a: pixel.a},\n      value;\n\n    if (parameters.colorDither) {\n      result.r = this.data.map[this.data.mod[red] > v ? this.data.div[red] + 1 : this.data.div[red]];\n      result.g = this.data.map[this.data.mod[green] > v ? this.data.div[green] + 1 : this.data.div[green]];\n      result.b = this.data.map[this.data.mod[blue] > v ? this.data.div[blue] + 1 : this.data.div[blue]];\n    }\n    else {\n      value = (red + green + blue) / 3;\n      result.r = result.g = result.b = this.data.map[this.data.mod[value] > v ? this.data.div[value] + 1 : this.data.div[value]];\n    }\n\n    return result;\n  }\n}\n\nexport default DitherEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Dither.js\n// module id = 31\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass EdgeEffect extends BasePointEffect {\n  static getName() {\n    return 'edge';\n  }\n\n  getDefaultParameters() {\n    return {\n      matrixes: {\n        robertsV: [\n          0, 0, -1,\n          0, 1, 0,\n          0, 0, 0\n        ],\n        robertsH: [\n          -1, 0, 0,\n          0, 1, 0,\n          0, 0, 0\n        ],\n        prewittV: [\n          -1, 0, 1,\n          -1, 0, 1,\n          -1, 0, 1\n        ],\n        prewittH: [\n          -1, -1, -1,\n          0, 0, 0,\n          1, 1, 1\n        ],\n        sobelV: [\n          -1, 0, 1,\n          -2, 0, 2,\n          -1, 0, 1\n        ],\n        sobelH: [\n          -1, -2, -1,\n          0, 0, 0,\n          1, 2, 1\n        ],\n        freiChenV: [\n          -1, 0, 1,\n          -Math.sqrt(2), 0, Math.sqrt(2),\n          -1, 0, 1\n        ],\n        freiChenH: [\n          -1, -Math.sqrt(2), -1,\n          0, 0, 0,\n          1, Math.sqrt(2), 1\n        ]\n      },\n      hEdgeMatrix: \"sobelV\",\n      vEdgeMatrix: \"sobelH\"\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    var hEdgeMatrix = parameters.hEdgeMatrix,\n      vEdgeMatrix = parameters.vEdgeMatrix;\n\n    if (typeof hEdgeMatrix === \"string\") {\n      hEdgeMatrix = parameters.matrixes[parameters.hEdgeMatrix];\n    }\n    if (typeof vEdgeMatrix === \"string\") {\n      vEdgeMatrix = parameters.matrixes[parameters.vEdgeMatrix];\n    }\n    return {\n      hEdgeMatrix: hEdgeMatrix,\n      vEdgeMatrix: vEdgeMatrix\n    }\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    var r = 0, g = 0, b = 0,\n      rh = 0, gh = 0, bh = 0,\n      rv = 0, gv = 0, bv = 0,\n      row, iy, col, ix, mOffset,\n      pixel2, h, v;\n\n    for (row = -1; row <= 1; row += 1) {\n      iy = y + row;\n      if (!(0 <= iy && iy < height)) {\n        iy = y;\n      }\n      mOffset = 3 * (row + 1) + 1;\n      for (col = -1; col <= 1; col += 1) {\n        ix = x + col;\n        if (!(0 <= ix && ix < width)) {\n          ix = x;\n        }\n        pixel2 = this.getOriginalPixel(ix, iy);\n        h = this.data.hEdgeMatrix[mOffset + col];\n        v = this.data.vEdgeMatrix[mOffset + col];\n\n        r = pixel2.r;\n        g = pixel2.g;\n        b = pixel2.b;\n\n        rh += Math.floor(h * r);\n        gh += Math.floor(h * g);\n        bh += Math.floor(h * b);\n\n        rv += Math.floor(v * r);\n        gv += Math.floor(v * g);\n        bv += Math.floor(v + b);\n      }\n    }\n    r = Math.floor(Math.sqrt(rh * rh + rv * rv) / 1.8);\n    g = Math.floor(Math.sqrt(gh * gh + gv * gv) / 1.8);\n    b = Math.floor(Math.sqrt(bh * bh + bv * bv) / 1.8);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: pixel.a\n    };\n  }\n}\n\nexport default EdgeEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Edge.js\n// module id = 32\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass ExposureEffect extends BasePointEffect {\n  static getName() {\n    return 'exposure';\n  }\n\n  getDefaultParameters() {\n    return {\n      exposure: 1\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = (1 - Math.exp(-pixel.r / 255 * parameters.exposure)) * 255;\n    pixel.g = (1 - Math.exp(-pixel.g / 255 * parameters.exposure)) * 255;\n    pixel.b = (1 - Math.exp(-pixel.b / 255 * parameters.exposure)) * 255;\n\n    return pixel;\n  }\n}\n\nexport default ExposureEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Exposure.js\n// module id = 33\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass GainEffect extends BasePointEffect {\n  static getName() {\n    return 'gain';\n  }\n\n  getDefaultParameters() {\n    return {\n      gain: 1,\n      bias: 1\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let red = (1 / parameters.gain - 2) * (1 - 2 * pixel.r / 255),\n      green = (1 / parameters.gain - 2) * (1 - 2 * pixel.g / 255),\n      blue = (1 / parameters.gain - 2) * (1 - 2 * pixel.b / 255);\n\n    if (pixel.r / 255 < 0.5) {\n      red = (pixel.r / 255) / red + 1;\n    }\n    else {\n      red = (red - (pixel.r / 255)) / (red - 1);\n    }\n\n    if (pixel.g / 255 < 0.5) {\n      green = (pixel.g / 255) / green + 1;\n    }\n    else {\n      green = (green - (pixel.g / 255)) / (green - 1);\n    }\n\n    if (pixel.b / 255 < 0.5) {\n      blue = (pixel.b / 255) / blue + 1;\n    }\n    else {\n      blue = (blue - (pixel.b / 255)) / (blue - 1);\n    }\n\n    red = red / ((1 / parameters.bias - 2) * (1 - red) + 1);\n    green = green / ((1 / parameters.bias - 2) * (1 - green) + 1);\n    blue = blue / ((1 / parameters.bias - 2) * (1 - blue) + 1);\n\n    pixel.r = red * 255;\n    pixel.g = green * 255;\n    pixel.b = blue * 255;\n\n    return pixel;\n  }\n}\n\nexport default GainEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Gain.js\n// module id = 34\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass GammaEffect extends BasePointEffect {\n  static getName() {\n    return 'gamma';\n  }\n\n  getDefaultParameters() {\n    return {\n      gammaRed: 1,\n      gammaGreen: 1,\n      gammaBlue: 1\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let table = {\n      r: [],\n      g: [],\n      b: []\n    }, i;\n\n    for (i = 0; i < 256; i += 1) {\n      table.r[i] = parseInt(((255 * Math.pow(i / 255, 1 / parameters.gammaRed)) + 0.5));\n      table.g[i] = parseInt(((255 * Math.pow(i / 255, 1 / parameters.gammaGreen)) + 0.5));\n      table.b[i] = parseInt(((255 * Math.pow(i / 255, 1 / parameters.gammaBlue)) + 0.5));\n    }\n\n    return {\n      table: table\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    return {\n      r: this.data.table.r[pixel.r],\n      g: this.data.table.g[pixel.g],\n      b: this.data.table.b[pixel.b],\n      a: pixel.a\n    };\n  }\n}\n\nexport default GammaEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Gamma.js\n// module id = 35\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName() {\n    return 'gray-scale';\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let newRGB = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n    return {\n      r: newRGB,\n      g: newRGB,\n      b: newRGB,\n      a: pixel.a\n    };\n  }\n}\n\nexport default GrayScaleEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/GrayScale.js\n// module id = 36\n// module chunks = 0","import BasePointEffect from '../BasePoint';\nimport {\n  RGBtoHSB,\n  HSBtoRGB\n} from '../../../helpers/color';\n\nclass HSBAdjustEffect extends BasePointEffect {\n  static getName() {\n    return 'hsb-adjust';\n  }\n\n  getDefaultParameters() {\n    return {\n      h: 1,\n      s: 1,\n      b: 1\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let hsb = RGBtoHSB(pixel.r, pixel.g, pixel.b);\n\n    hsb.h += parameters.h;\n    while (hsb.h < 0) {\n      hsb.h += Math.PI * 2;\n    }\n\n    hsb.s += parameters.s;\n    hsb.s = Math.max(Math.min(hsb.s, 1), 0);\n\n    hsb.b += parameters.b;\n    hsb.b = Math.max(Math.min(hsb.b, 1), 0);\n\n    let result = HSBtoRGB(hsb.h, hsb.s, hsb.b);\n    pixel.r = result.r;\n    pixel.g = result.g;\n    pixel.b = result.b;\n\n    return pixel;\n  }\n}\n\nexport default HSBAdjustEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/HSBAdjust.js\n// module id = 37\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass InvertEffect extends BasePointEffect {\n  static getName() {\n    return 'invert';\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = 255 - pixel.r;\n    pixel.g = 255 - pixel.g;\n    pixel.b = 255 - pixel.b;\n    return pixel;\n  }\n}\n\nexport default InvertEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Invert.js\n// module id = 38\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass InvertAlphaEffect extends BasePointEffect {\n  static getName() {\n    return 'invert-alpha';\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.a = 255 - pixel.a;\n    return pixel;\n  }\n}\n\nexport default InvertAlphaEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/InvertAlpha.js\n// module id = 39\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass LevelsEffect extends BasePointEffect {\n  static getName() {\n    return 'levels';\n  }\n\n  getDefaultParameters() {\n    return {\n      low: 0,\n      high: 1,\n      lowOutput: 0,\n      highOutput: 1\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let Histogram = function (imageData, width, height, offset, stride) {\n      let i, j, index,\n        x, y,\n        histogram = new Array(3),\n        minValue = new Array(4),\n        maxValue = new Array(4),\n        minFrequency = new Array(3),\n        maxFrequency = new Array(3),\n        mean = new Array(3),\n        numSamples = width * height,\n        isGray = true,\n        RED = 0,\n        GREEN = 1,\n        BLUE = 2,\n        GRAY = 3;\n\n      for (i = 0; i < histogram.length; i += 1) {\n        histogram[i] = new Array(256);\n        for (j = 0; j < 256; j += 1) {\n          histogram[i][j] = 0;\n        }\n      }\n\n      for (y = 0; y < height; y += 1) {\n        for (x = 0; x < width; x += 1) {\n          index = y * width * 4 + x * 4;\n          histogram[RED][imageData.data[index]]++;\n          histogram[GREEN][imageData.data[index + 1]]++;\n          histogram[BLUE][imageData.data[index + 2]]++;\n        }\n      }\n\n      for (i = 0; i < 256; i += 1) {\n        if (histogram[RED][i] !== histogram[GREEN][i] || histogram[GREEN][i] !== histogram[BLUE][i]) {\n          isGray = false;\n          break;\n        }\n      }\n\n      for (i = 0; i < 3; i += 1) {\n        for (j = 0; j < 256; j += 1) {\n          if (histogram[i][j] > 0) {\n            minValue[i] = j;\n            break;\n          }\n        }\n        for (j = 255; j >= 0; j -= 1) {\n          if (histogram[i][j] > 0) {\n            maxValue[i] = j;\n            break;\n          }\n        }\n        minFrequency[i] = Infinity;\n        maxFrequency[i] = 0;\n        for (j = 0; j < 256; j += 1) {\n          minFrequency[i] = Math.min(minFrequency[i], histogram[i][j]);\n          maxFrequency[i] = Math.max(maxFrequency[i], histogram[i][j]);\n          mean[i] += j * histogram[i][j];\n        }\n        mean[i] /= numSamples;\n        minValue[GRAY] = Math.min(minValue[RED], minValue[GREEN], minValue[BLUE]);\n        maxValue[GRAY] = Math.max(maxValue[RED], maxValue[GREEN], maxValue[BLUE]);\n      }\n\n      this.getNumSamples = function () {\n        return numSamples;\n      };\n\n      this.isGray = function () {\n        return isGray;\n      };\n\n      this.getFrequency = function (channel, value) {\n        if (!value) {\n          if (numSamples > 0 && isGray && value >= 0 && value <= 255) {\n            return histogram[0][value];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2 || value < 0 || value > 255) {\n          return -1;\n        }\n        return histogram[channel][value];\n      };\n\n      this.getMinFrequency = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return minFrequency[channel];\n      };\n\n      this.getMaxFrequency = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return maxFrequency[channel];\n      };\n\n      this.getMinValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minValue[0];\n          }\n          return -1;\n        }\n        return minValue[channel];\n      };\n\n      this.getMaxValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxValue[0];\n          }\n          return -1;\n        }\n        return maxValue[channel];\n      };\n\n      this.getMeanValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return mean[0];\n          }\n          return -1;\n        }\n        return mean[channel];\n      }\n    };\n\n    let histogram = new Histogram(imageData, width, height, 0, width),\n      lut = new Array(3),\n      low = parameters.low * 255,\n      high = parameters.high * 255,\n      i, j;\n\n    for (i = 0; i < lut.length; i += 1) {\n      lut[i] = new Array(256);\n    }\n    if (low === high) {\n      high++;\n    }\n\n    for (i = 0; i < 3; i += 1) {\n      for (j = 0; j < 256; j += 1) {\n        lut[i][j] = (255 * (parameters.lowOutput + (parameters.highOutput - parameters.lowOutput) * (j - low) / (high - low)))\n      }\n    }\n\n    histogram.isGray(); // uglify fix - \"Side effects in initialization of unused variable histogram\" warning\n\n    return {\n      lut: lut\n    }\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    return {\n      r: this.data.lut[0][pixel.r],\n      g: this.data.lut[1][pixel.g],\n      b: this.data.lut[2][pixel.b],\n      a: pixel.a\n    };\n  }\n}\n\nexport default LevelsEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Levels.js\n// module id = 40\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass RescaleEffect extends BasePointEffect {\n  static getName() {\n    return 'rescale';\n  }\n\n  getDefaultParameters() {\n    return {\n      scale: 1\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = parameters.scale * pixel.r;\n    pixel.g = parameters.scale * pixel.g;\n    pixel.b = parameters.scale * pixel.b;\n\n    return pixel;\n  }\n}\n\nexport default RescaleEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Rescale.js\n// module id = 41\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName() {\n    return 'sepia';\n  }\n\n  getDefaultParameters() {\n    return {\n      sepiaValue: 1\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let tmp = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n\n    pixel.r = tmp + 2 * parameters.sepiaValue;\n    pixel.g = tmp + parameters.sepiaValue;\n    pixel.b = tmp;\n\n    return pixel;\n  }\n}\n\nexport default GrayScaleEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Sepia.js\n// module id = 42\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass SolarizeEffect extends BasePointEffect {\n  static getName() {\n    return 'solarize';\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    var red = pixel.r / 255 > 0.5 ? 2 * ((pixel.r / 255) - 0.5) : 2 * (0.5 - (pixel.r / 255)),\n      green = pixel.g / 255 > 0.5 ? 2 * ((pixel.g / 255) - 0.5) : 2 * (0.5 - (pixel.g / 255)),\n      blue = pixel.b / 255 > 0.5 ? 2 * ((pixel.b / 255) - 0.5) : 2 * (0.5 - (pixel.b / 255));\n\n    return {\n      r: red * 255,\n      g: green * 255,\n      b: blue * 255,\n      a: pixel.a\n    }\n  }\n}\n\nexport default SolarizeEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Solarize.js\n// module id = 43\n// module chunks = 0","import BasePointEffect from '../BasePoint';\n\nclass ThresholdEffect extends BasePointEffect {\n  static getName() {\n    return 'threshold';\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    var grayscale = (pixel.r + pixel.g + pixel.b) / 3;\n\n    if (grayscale >= 127) {\n      return {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: pixel.a\n      };\n    }\n\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: pixel.a\n    };\n  }\n}\n\nexport default ThresholdEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Threshold.js\n// module id = 44\n// module chunks = 0","import BasePointEffect from '../BasePoint';\nimport {mixColors} from '../../../helpers/color';\n\nclass TritoneEffect extends BasePointEffect {\n  static getName() {\n    return 'tritone';\n  }\n\n  getDefaultParameters() {\n    return {\n      shadowColor: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255\n      },\n      midColor: {\n        r: 136,\n        g: 136,\n        b: 136,\n        a: 255\n      },\n      highColor: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 255\n      }\n    };\n  }\n\n  before(parameters) {\n    let lut = [],\n      i, t;\n\n    for (i = 0; i < 128; i += 1) {\n      t = i / 127;\n      lut[i] = mixColors(t, parameters.shadowColor, parameters.midColor);\n    }\n    for (i = 128; i < 256; i += 1) {\n      t = (i - 127) / 128;\n      lut[i] = mixColors(t, parameters.midColor, parameters.highColor);\n    }\n    return {\n      lut: lut\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let brightness = Math.floor((pixel.r + pixel.g + pixel.b) / 3);\n    return this.data.lut[brightness];\n  }\n}\n\nexport default TritoneEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/point/Tritone.js\n// module id = 45\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\nimport {mod} from '../../../helpers/common';\n\nclass CircleEffect extends BaseTransformEffect {\n  static getName() {\n    return 'circle';\n  }\n\n  getDefaultParameters() {\n    return {\n      radius: 10,\n      height: 20,\n      angle: 0,\n      spreadAngle: Math.PI,\n      centreX: 0.5,\n      centreY: 0.5\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n      width: --width\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    var dx = x - this.data.icentreX,\n      dy = y - this.data.icentreX,\n      theta = Math.atan2(-dy, -dx) + parameters.angle,\n      r = Math.sqrt(dx * dx + dy * dy);\n\n    theta = mod(theta, 2 * Math.PI);\n\n    return [\n      this.data.width * theta / parameters.spreadAngle + 0.00001,\n      height * (1 - (r - parameters.radius) / (height + 0.00001))\n    ];\n  }\n}\n\nexport default CircleEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Circle.js\n// module id = 46\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\n\nclass DiffuseEffect extends BaseTransformEffect {\n  static getName() {\n    return 'diffuse';\n  }\n\n  getDefaultParameters() {\n    return {\n      scale: 4\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      i,\n      angle;\n    for (i = 0; i < 256; i += 1) {\n      angle = Math.PI * 2 * i / 256;\n      sinTable[i] = parameters.scale * Math.sin(angle);\n      cosTable[i] = parameters.scale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable\n    };\n  }\n\n  callback(x, y, parameters) {\n    let angle = parseInt(Math.random() * 255),\n      distance = Math.random();\n\n    return [\n      x + distance * this.data.sinTable[angle],\n      y + distance * this.data.cosTable[angle]\n    ];\n  }\n}\n\nexport default DiffuseEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Diffuse.js\n// module id = 47\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\nimport {triangle} from '../../../helpers/common';\n\nclass KaleidoscopeEffect extends BaseTransformEffect {\n  static getName() {\n    return 'kaleidoscope';\n  }\n\n  getDefaultParameters() {\n    return {\n      centreX: 0.5,\n      centreY: 0.5,\n      angle: 0,\n      angle2: 0,\n      sides: 3,\n      radius: 0\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY\n    };\n  }\n\n  callback(x, y, parameters) {\n    var dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      r = Math.sqrt(dx * dx + dy * dy),\n      theta = Math.atan2(dy, dx) - parameters.angle - parameters.angle2;\n\n    theta = triangle(theta / Math.PI * parameters.sides * 0.5);\n\n    if (parameters.radius !== 0) {\n      var c = Math.cos(theta),\n        radiusC = parameters.radius / c;\n      r = radiusC * triangle(r / radiusC);\n    }\n\n    theta += parameters.angle;\n\n    return [\n      this.data.icentreX + r * Math.cos(theta),\n      this.data.icentreY + r * Math.sin(theta)\n    ];\n  }\n}\n\nexport default KaleidoscopeEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Kaleidoscope.js\n// module id = 48\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\nimport noiseHelper from '../../../helpers/noise';\n\nclass MarbleEffect extends BaseTransformEffect {\n  static getName() {\n    return 'marble';\n  }\n\n  getDefaultParameters() {\n    return {\n      xScale: 4,\n      yScale: 4,\n      amount: 1,\n      turbulence: 1\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      i = 0,\n      angle;\n\n    for (i = 0; i < 256; i += 1) {\n      angle = Math.PI * 2 * i / 256 * parameters.turbulence;\n      sinTable[i] = -parameters.yScale * Math.sin(angle);\n      cosTable[i] = parameters.yScale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n      displacementMap: function (x, y) {\n        let result = 127 * (1 + noiseHelper.noise2(x / parameters.xScale, y / parameters.yScale));\n        return Math.min(255, Math.max(0, result));\n      }\n    };\n  }\n\n  callback(x, y, parameters) {\n    let displacement = Math.floor(this.data.displacementMap(x, y));\n    return [\n      x + this.data.sinTable[displacement],\n      y + this.data.cosTable[displacement]\n    ];\n  }\n}\n\nexport default MarbleEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Marble.js\n// module id = 49\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName() {\n    return 'offset';\n  }\n\n  getDefaultParameters() {\n    return {\n      xOffset: 100,\n      yOffset: 100,\n      wrap: true\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    if (parameters.wrap) {\n      return [\n        (x + width - parameters.xOffset) % width,\n        (y + height - parameters.yOffset) % height\n      ];\n    }\n    else {\n      return [\n        x - parameters.xOffset,\n        y - parameters.yOffset\n      ];\n    }\n  }\n}\n\nexport default RotateEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Offset.js\n// module id = 50\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\nimport noiseHelper from '../../../helpers/noise';\n\nclass PerspectiveEffect extends BaseTransformEffect {\n  static getName() {\n    return 'perspective';\n  }\n\n  getDefaultParameters() {\n    return {\n      x0: 0,\n      y0: 0,\n      x1: 1,\n      y1: 0,\n      x2: 1,\n      y2: 1,\n      x3: 0,\n      y3: 1\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    function unitSquareToQuad() {\n      var result = {},\n        x0 = Math.floor(width * parameters.x0),\n        y0 = Math.floor(height * parameters.y0),\n        x1 = Math.floor(width * parameters.x1),\n        y1 = Math.floor(height * parameters.y1),\n        x2 = Math.floor(width * parameters.x2),\n        y2 = Math.floor(height * parameters.y2),\n        x3 = Math.floor(width * parameters.x3),\n        y3 = Math.floor(height * parameters.y3),\n        dx1 = x1 - x2,\n        dy1 = y1 - y2,\n        dx2 = x3 - x2,\n        dy2 = y3 - y2,\n        dx3 = x0 - x1 + x2 - x3,\n        dy3 = y0 - y1 + y2 - y3;\n\n      if (dx3 == 0 && dy3 == 0) {\n        result.a11 = x1 - x0;\n        result.a21 = x2 - x1;\n        result.a31 = x0;\n        result.a12 = y1 - y0;\n        result.a22 = y2 - y1;\n        result.a32 = y0;\n        result.a13 = result.a23 = 0;\n      }\n      else {\n        result.a13 = (dx3 * dy2 - dx2 * dy3) / (dx1 * dy2 - dy1 * dx2);\n        result.a23 = (dx1 * dy3 - dy1 * dx3) / (dx1 * dy2 - dy1 * dx2);\n        result.a11 = x1 - x0 + result.a13 * x1;\n        result.a21 = x3 - x0 + result.a23 * x3;\n        result.a31 = x0;\n        result.a12 = y1 - y0 + result.a13 * y1;\n        result.a22 = y3 - y0 + result.a23 * y3;\n        result.a32 = y0;\n      }\n\n      result.a33 = 1;\n\n      return result;\n    }\n\n    var result = unitSquareToQuad();\n\n    result.A = result.a22 * result.a33 - result.a32 * result.a23;\n    result.B = result.a31 * result.a23 - result.a21 * result.a33;\n    result.C = result.a21 * result.a32 - result.a31 * result.a22;\n    result.D = result.a32 * result.a13 - result.a12 * result.a33;\n    result.E = result.a11 * result.a33 - result.a31 * result.a13;\n    result.F = result.a31 * result.a12 - result.a11 * result.a32;\n    result.G = result.a12 * result.a23 - result.a22 * result.a13;\n    result.H = result.a21 * result.a13 - result.a11 * result.a23;\n    result.I = result.a11 * result.a22 - result.a21 * result.a12;\n\n    return result;\n  }\n\n  callback(x, y, parameters, width, height) {\n    return [\n      width * (this.data.A * x + this.data.B * y + this.data.C) / (this.data.G * x + this.data.H * y + this.data.I),\n      height * (this.data.D * x + this.data.E * y + this.data.F) / (this.data.G * x + this.data.H * y + this.data.I)\n    ];\n  }\n}\nexport default PerspectiveEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Perspective.js\n// module id = 51\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\n\nclass PinchEffect extends BaseTransformEffect {\n  static getName() {\n    return 'pinch';\n  }\n\n  getDefaultParameters() {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n      amount: 0.5\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    var icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n    if (radius === 0) {\n      radius = Math.min(icentreX, icentreY);\n    }\n    radius2 = radius * radius;\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      radius: radius,\n      radius2: radius2\n    };\n  }\n\n  callback(x, y, parameters) {\n    var dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      distance = dx * dx + dy * dy,\n      d, t, e, a, s, c;\n\n    if (distance > this.data.radius2 || distance === 0) {\n      return [x, y];\n    }\n    d = Math.sqrt(distance / this.data.radius2);\n    t = Math.pow(Math.sin(Math.PI * 0.5 * d), -parameters.amount);\n\n    dx *= t;\n    dy *= t;\n\n    e = 1 - d;\n    a = parameters.angle * e * e;\n\n    s = Math.sin(a);\n    c = Math.cos(a);\n\n    return [\n      this.data.icentreX + c * dx - s * dy,\n      this.data.icentreY + s * dx + c * dy\n    ];\n  }\n}\n\nexport default PinchEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Pinch.js\n// module id = 52\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\n\nclass PolarEffect extends BaseTransformEffect {\n  static getName() {\n    return 'polar';\n  }\n\n  getDefaultParameters() {\n    return {\n      type: \"RECT_TO_POLAR\" // RECT_TO_POLAR, POLAR_TO_RECT, INVERT_IN_CIRCLE\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      centreX: width / 2,\n      centreY: height / 2,\n      radius: Math.max(width / 2, height / 2),\n      sqr: function (x) {\n        return x * x;\n      }\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    var theta, theta2, t,\n      m, xMax, yMax, nx, ny, xmax, ymax,\n      dx, dy, distance,\n      r = 0;\n\n    switch (parameters.type) {\n      case \"RECT_TO_POLAR\":\n        if (x >= this.data.centreX) {\n          if (y > this.data.centreY) {\n            theta = Math.PI - Math.atan(((x - this.data.centreX)) / ((y - this.data.centreY)));\n            r = Math.sqrt(this.data.sqr(x - this.data.centreX) + this.data.sqr(y - this.data.centreY));\n          }\n          else {\n            if (y < this.data.centreY) {\n              theta = Math.atan(((x - this.data.centreX)) / ((this.data.centreY - y)));\n              r = Math.sqrt(this.data.sqr(x - this.data.centreX) + this.data.sqr(this.data.centreY - y));\n            }\n            else {\n              theta = Math.PI / 2;\n              r = x - this.data.centreX;\n            }\n          }\n        }\n        else {\n          if (x < this.data.centreX) {\n            if (y < this.data.centreY) {\n              theta = (Math.PI * 2) - Math.atan(((this.data.centreX - x)) / ((this.data.centreY - y)));\n              r = Math.sqrt(this.data.sqr(this.data.centreX - x) + this.data.sqr(this.data.centreY - y));\n            }\n            else {\n              if (y > this.data.centreY) {\n                theta = Math.PI + Math.atan(((this.data.centreX - x)) / ((y - this.data.centreY)));\n                r = Math.sqrt(this.data.sqr(this.data.centreX - x) + this.data.sqr(y - this.data.centreY));\n              }\n              else {\n                theta = 1.5 * Math.PI;\n                r = this.data.centreX - x;\n              }\n            }\n          }\n        }\n        if (x != this.data.centreX) {\n          m = Math.abs(((y - this.data.centreY)) / ((x - this.data.centreX)));\n        }\n        else {\n          m = 0;\n        }\n\n        if (m <= ((height / width))) {\n          if (x == this.data.centreX) {\n            xMax = 0;\n            yMax = this.data.centreY;\n          }\n          else {\n            xMax = this.data.centreX;\n            yMax = m * xMax;\n          }\n        }\n        else {\n          yMax = this.data.centreY;\n          xMax = yMax / m;\n        }\n\n        return [\n          (width - 1) - (width - 1) / (Math.PI * 2 * theta),\n          height * r / this.data.radius\n        ];\n\n      case \"POLAR_TO_RECT\":\n\n        theta = x / width * Math.PI * 2;\n\n        if (theta >= 1.5 * Math.PI) {\n          theta2 = Math.PI * 2 - theta;\n        }\n        else {\n          if (theta >= Math.PI) {\n            theta2 = theta - Math.PI;\n          }\n          else {\n            if (theta >= 0.5 * Math.PI\n            ) {\n              theta2 = Math.PI - theta;\n            }\n            else {\n              theta2 = theta;\n            }\n          }\n        }\n\n        t = Math.tan(theta2);\n        if (t != 0) {\n          m = 1.0 / t;\n        }\n        else {\n          m = 0;\n        }\n\n        if (m <= ((height) / (width))) {\n          if (theta2 == 0) {\n            xmax = 0;\n            ymax = this.data.centreY;\n          }\n          else {\n            xmax = this.data.centreX;\n            ymax = m * xmax;\n          }\n        }\n        else {\n          ymax = this.data.centreY;\n          xmax = ymax / m;\n        }\n\n        r = this.data.radius * (y / (height));\n\n        nx = -r * Math.sin(theta2);\n        ny = r * Math.cos(theta2);\n\n        if (theta >= 1.5 * Math.PI) {\n          return [\n            this.data.centreX - nx,\n            this.data.centreY - ny\n          ];\n        }\n        else {\n          if (theta >= Math.PI) {\n            return [\n              this.data.centreX - nx,\n              this.data.centreY + ny\n            ];\n          }\n          else {\n            if (theta >= 0.5 * Math.PI) {\n              return [\n                this.data.centreX + nx,\n                this.data.centreY + ny\n              ];\n            }\n            else {\n              return [\n                this.data.centreX + nx,\n                this.data.centreY - ny\n              ];\n            }\n          }\n        }\n        break; // TODO: ???\n\n      case \"INVERT_IN_CIRCLE\":\n        dx = x - this.data.centreX;\n        dy = y - this.data.centreY;\n        distance = dx * dx + dy * dy;\n\n        return [\n          this.data.centreX + this.data.centreX * this.data.centreX * dx / distance,\n          this.data.centreY + this.data.centreY * this.data.centreY * dy / distance\n        ];\n    }\n  }\n}\nexport default PolarEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Polar.js\n// module id = 53\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\nimport {\n  triangle,\n  mod\n} from '../../../helpers/common';\nimport noise from '../../../helpers/noise';\n\nclass RippleEffect extends BaseTransformEffect {\n  static getName() {\n    return 'ripple';\n  }\n\n  getDefaultParameters() {\n    return {\n      xAmplitude: 5,\n      yAmplitute: 0,\n      xWaveLength: 16,\n      yWaveLength: 16,\n      waveType: \"SINE\" // SAWTOOTH TRIANGLE NOISE\n    };\n  }\n\n  callback(x, y, parameters) {\n    var nx = y / parameters.xWaveLength,\n      ny = x / parameters.yWaveLength,\n      fx, fy;\n\n    switch (parameters.waveType) {\n      case \"SINE\":\n      default:\n        fx = Math.sin(nx);\n        fy = Math.sin(ny);\n        break;\n\n      case \"SAWTOOTH\":\n        fx = mod(nx, 1);\n        fy = mod(ny, 1);\n        break;\n\n      case \"TRIANGLE\":\n        fx = triangle(nx);\n        fy = triangle(ny);\n        break;\n\n      case \"NOISE\":\n        fx = noise.noise1(nx);\n        fy = noise.noise1(ny);\n        break;\n    }\n\n    return [\n      x + parameters.xAmplitude * fx,\n      y + parameters.yAmplitute * fy\n    ];\n  }\n}\n\nexport default RippleEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Ripple.js\n// module id = 54\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName() {\n    return 'rotate';\n  }\n\n  getDefaultParameters() {\n    return {\n      angle: Math.PI\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      cos: Math.cos(parameters.angle),\n      sin: Math.sin(parameters.angle),\n      icentreX: width / 2,\n      icentreY: height / 2\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    return [\n      ((this.data.cos * (x - this.data.icentreX)) - (this.data.sin * (y - this.data.icentreY)) + this.data.icentreY),\n      ((this.data.sin * (x - this.data.icentreX)) - (this.data.cos * (y - this.data.icentreY)) + this.data.icentreY)\n    ];\n  }\n}\n\nexport default RotateEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Rotate.js\n// module id = 55\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\n\nclass ShearEffect extends BaseTransformEffect {\n  static getName() {\n    return 'shear';\n  }\n\n  getDefaultParameters() {\n    return {\n      xAngle: 0,\n      yAngle: 0,\n      xOffset: 0,\n      yOffset: 0\n    };\n  }\n\n  before(parameters, width, height) {\n    return {\n      shx: Math.sin(parameters.xAngle),\n      shy: Math.sin(parameters.yAngle)\n    };\n  }\n\n  callback(x, y, parameters) {\n    return [\n      x + parameters.xOffset + (y * this.data.shx),\n      y + parameters.yOffset + (x * this.data.shy)\n    ];\n  }\n}\n\nexport default ShearEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Shear.js\n// module id = 56\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\n\nclass SphereEffect extends BaseTransformEffect {\n  static getName() {\n    return 'sphere';\n  }\n\n  getDefaultParameters() {\n    return {\n      a: 0,\n      b: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      refractionIndex: 1.5\n    };\n  }\n\n  before(parameters, width, height) {\n    var icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      a = parameters.a,\n      b = parameters.b,\n      a2, b2;\n    if (a === 0) {\n      a = width / 2;\n    }\n    if (b === 0) {\n      b = height / 2;\n    }\n    a2 = a * a;\n    b2 = b * b;\n\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      a: a,\n      b: b,\n      a2: a2,\n      b2: b2\n    };\n  }\n\n  callback(x, y, parameters) {\n    var dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      x2 = dx * dx,\n      y2 = dy * dy,\n      rRefraction = 1 / parameters.refractionIndex,\n      z = Math.sqrt((1 - x2 / this.data.a2 - y2 / this.data.b2) * (this.data.a * this.data.b)),\n      z2 = z * z,\n      xAngle = Math.acos(dx / Math.sqrt(x2 + z2)),\n      angle1 = Math.PI / 2 - xAngle,\n      angle2 = Math.asin(Math.sin(angle1) * rRefraction),\n      yAngle = Math.acos(dy / Math.sqrt(y2 + z2)),\n      ret = new Array(2);\n\n    if (y2 >= (this.data.b2 - (this.data.b2 / x2) / this.data.a2)) {\n      return [x, y];\n    }\n\n    angle2 = (Math.PI / 2) - xAngle - angle2;\n    ret[0] = x - Math.tan(angle2) * z;\n\n    angle1 = (Math.PI / 2) - yAngle;\n    angle2 = Math.asin(Math.sin(angle1) * rRefraction);\n    angle2 = (Math.PI / 2) - yAngle - angle2;\n    ret[1] = y - Math.tan(angle2) * z;\n    return ret;\n  }\n}\n\nexport default SphereEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Sphere.js\n// module id = 57\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\nimport noise from '../../../helpers/noise';\n\nclass SwimEffect extends BaseTransformEffect {\n  static getName() {\n    return 'swim';\n  }\n\n  getDefaultParameters() {\n    return {\n      scale: 32,\n      turbulence: 0,\n      amount: 1,\n      time: 0,\n      angle: 0,\n      stretch: 1\n    };\n  }\n\n  before(parameters, width, height) {\n    var cos = Math.cos(parameters.angle),\n      sin = Math.sin(parameters.angle);\n\n    return {\n      m00: cos,\n      m01: sin,\n      m10: -sin,\n      m11: cos\n    };\n  }\n\n  callback(x, y, parameters) {\n    var nx = this.data.m00 * x + this.data.m01 * y,\n      ny = this.data.m10 * x + this.data.m11 * y;\n\n    nx /= parameters.scale;\n    ny /= parameters.scale * parameters.stretch;\n\n    if (parameters.turbulence === 1) {\n      return [\n        x + parameters.amount * noise.noise3(nx + 0.5, ny, parameters.time),\n        y + parameters.amount * noise.noise3(nx, ny + 0.5, parameters.time)\n      ];\n    }\n    return [\n      x + parameters.amount * noise.turbulence3(nx + 0.5, ny, parameters.turbulence, parameters.time),\n      y + parameters.amount * noise.turbulence3(nx, ny + 0.5, parameters.turbulence, parameters.time)\n    ];\n  }\n}\n\nexport default SwimEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Swim.js\n// module id = 58\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\nimport noise from '../../../helpers/noise';\n\nclass TwirlEffect extends BaseTransformEffect {\n  static getName() {\n    return 'twirl';\n  }\n\n  getDefaultParameters() {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100\n    };\n  }\n\n  before(parameters, width, height) {\n    var iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2\n    };\n  }\n\n  callback(x, y, parameters) {\n    var dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance = dx * dx + dy * dy,\n      a;\n\n    if (distance > parameters.radius2) {\n      return [x, y];\n    }\n\n    distance = Math.sqrt(distance);\n    a = Math.atan2(dy, dx) + parameters.angle * (parameters.radius - distance) / parameters.radius;\n\n    return [\n      this.data.iCentreX + distance * Math.cos(a),\n      this.data.iCentreY + distance * Math.sin(a)\n    ];\n  }\n}\n\nexport default TwirlEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Twirl.js\n// module id = 59\n// module chunks = 0","import BaseTransformEffect from '../BaseTransform';\nimport noise from '../../../helpers/noise';\n\nclass WaterEffect extends BaseTransformEffect {\n  static getName() {\n    return 'water';\n  }\n\n  getDefaultParameters() {\n    return {\n      waveLength: 16,\n      amplitude: 10,\n      phase: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 50\n    };\n  }\n\n  before(parameters, width, height) {\n    var iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2\n    };\n  }\n\n  callback(x, y, parameters) {\n    var dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance2 = dx * dx + dy * dy,\n      distance,\n      amount;\n\n    if (distance2 > this.data.radius2) {\n      return [x, y];\n    }\n    distance = Math.sqrt(distance2);\n    amount = parameters.amplitude * Math.sin(distance / parameters.waveLength * Math.PI * 2 - parameters.phase);\n    amount *= (parameters.radius - distance) / parameters.radius;\n    if (distance !== 0) {\n      amount *= parameters.waveLength / distance;\n    }\n    return [x + dx * amount, y + dy * amount];\n  }\n}\n\nexport default WaterEffect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/effects/transform/Water.js\n// module id = 60\n// module chunks = 0","export function resizeNearestNeighbour(oldImageData, newImageData, newWidth, newHeight) {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    oldPixelIndex,\n    newPixelIndex,\n    x, y;\n\n  for (y = 0; y < newHeight; y += 1) {\n    for (x = 0; x < newWidth; x += 1) {\n      oldPixelIndex = Math.floor(y * ratioY) * oldWidth * 4 + Math.floor(x * ratioX) * 4;\n      newPixelIndex = y * newWidth * 4 + x * 4;\n\n      newImageData.data[newPixelIndex + 0] = oldImageData.data[oldPixelIndex + 0];\n      newImageData.data[newPixelIndex + 1] = oldImageData.data[oldPixelIndex + 1];\n      newImageData.data[newPixelIndex + 2] = oldImageData.data[oldPixelIndex + 2];\n      newImageData.data[newPixelIndex + 3] = oldImageData.data[oldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBilinearInterpolation(oldImageData, newImageData, newWidth, newHeight) {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    newPixelIndex,\n    x, y,\n    x0, y0,\n    dx, dy,\n    x1, y1,\n    oldPixelIndex00, oldPixelIndex01, oldPixelIndex10, oldPixelIndex11,\n    i, j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n      x0 = Math.floor(x);\n      y0 = Math.floor(y);\n      dx = x - x0;\n      dy = y - y0;\n      x1 = x0 + 1;\n      y1 = y0 + 1;\n\n      if (x1 >= oldWidth) {\n        x1 = x0;\n      }\n      if (y1 >= oldHeight) {\n        y1 = y0;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] =\n        (1.0 - dy) * ((1.0 - dx) * oldImageData.data[oldPixelIndex00] + dx * oldImageData.data[oldPixelIndex01]) +\n        dy * ((1.0 - dx) * oldImageData.data[oldPixelIndex10] + dx * oldImageData.data[oldPixelIndex11]);\n      newImageData.data[newPixelIndex + 1] =\n        (1.0 - dy) * ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 1] + dx * oldImageData.data[oldPixelIndex01 + 1]) +\n        dy * ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 1] + dx * oldImageData.data[oldPixelIndex11 + 1]);\n      newImageData.data[newPixelIndex + 2] =\n        (1.0 - dy) * ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 2] + dx * oldImageData.data[oldPixelIndex01 + 2]) +\n        dy * ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 2] + dx * oldImageData.data[oldPixelIndex11 + 2]);\n      newImageData.data[newPixelIndex + 3] =\n        (1.0 - dy) * ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 3] + dx * oldImageData.data[oldPixelIndex01 + 3]) +\n        dy * ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 3] + dx * oldImageData.data[oldPixelIndex11 + 3]);\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBiquadraticInterpolation(oldImageData, newImageData, newWidth, newHeight) {\n  let interpolate = function interpolate(f1, f2, f3, d) {\n      return (f2 + (f3 - f1) * d + (f1 - 2 * f2 + f3) * d * d);\n    },\n    interpolateNormalize = function interpolateNormalize(f1, f2, f3, d) {\n      let result = interpolate(f1, f2, f3, d);\n      if (result > 255) {\n        return 255;\n      }\n      if (result < 0) {\n        return 0;\n      }\n      return Math.floor(result);\n    },\n    oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    x, y,\n    x0, y0, x1, y1, x2, y2,\n    dx, dy,\n    oldPixelIndex00, oldPixelIndex01, oldPixelIndex02,\n    oldPixelIndex10, oldPixelIndex11, oldPixelIndex12,\n    oldPixelIndex20, oldPixelIndex21, oldPixelIndex22,\n    newPixelIndex,\n    i, j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n\n      x1 = Math.floor(x);\n      y1 = Math.floor(y);\n      dx = (x - x1) * 0.5;\n      dy = (y - y1) * 0.5;\n\n      if (x1 - 1 >= 0) {\n        x0 = x1 - 1;\n      }\n      else {\n        x0 = x1;\n      }\n\n      if (y1 - 1 >= 0) {\n        y0 = y1 - 1;\n      }\n      else {\n        y0 = y1;\n      }\n\n      if (x1 + 1 >= oldWidth) {\n        x2 = x1;\n      }\n      else {\n        x2 = x1 + 1;\n      }\n\n      if (y1 + 1 >= oldWidth) {\n        y2 = y1;\n      }\n      else {\n        y2 = y1 + 1;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex02 = (y0 * oldWidth + x2) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      oldPixelIndex12 = (y1 * oldWidth + x2) * 4;\n      oldPixelIndex20 = (y2 * oldWidth + x0) * 4;\n      oldPixelIndex21 = (y2 * oldWidth + x1) * 4;\n      oldPixelIndex22 = (y2 * oldWidth + x2) * 4;\n\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] = (\n        interpolateNormalize(\n          interpolate(oldImageData.data[oldPixelIndex00], oldImageData.data[oldPixelIndex01], oldImageData.data[oldPixelIndex02], dx),\n          interpolate(oldImageData.data[oldPixelIndex10], oldImageData.data[oldPixelIndex11], oldImageData.data[oldPixelIndex12], dx),\n          interpolate(oldImageData.data[oldPixelIndex20], oldImageData.data[oldPixelIndex21], oldImageData.data[oldPixelIndex22], dx),\n          dy)\n      );\n\n      newImageData.data[newPixelIndex + 1] = (\n        interpolateNormalize(\n          interpolate(oldImageData.data[oldPixelIndex00 + 1], oldImageData.data[oldPixelIndex01 + 1], oldImageData.data[oldPixelIndex02 + 1], dx),\n          interpolate(oldImageData.data[oldPixelIndex10 + 1], oldImageData.data[oldPixelIndex11 + 1], oldImageData.data[oldPixelIndex12 + 1], dx),\n          interpolate(oldImageData.data[oldPixelIndex20 + 1], oldImageData.data[oldPixelIndex21 + 1], oldImageData.data[oldPixelIndex22 + 1], dx),\n          dy)\n      );\n\n      newImageData.data[newPixelIndex + 2] = (\n        interpolateNormalize(\n          interpolate(oldImageData.data[oldPixelIndex00 + 2], oldImageData.data[oldPixelIndex01 + 2], oldImageData.data[oldPixelIndex02 + 2], dx),\n          interpolate(oldImageData.data[oldPixelIndex10 + 2], oldImageData.data[oldPixelIndex11 + 2], oldImageData.data[oldPixelIndex12 + 2], dx),\n          interpolate(oldImageData.data[oldPixelIndex20 + 2], oldImageData.data[oldPixelIndex21 + 2], oldImageData.data[oldPixelIndex22 + 2], dx),\n          dy)\n      );\n\n      newImageData.data[newPixelIndex + 3] = (\n        interpolateNormalize(\n          interpolate(oldImageData.data[oldPixelIndex00 + 3], oldImageData.data[oldPixelIndex01 + 3], oldImageData.data[oldPixelIndex02 + 3], dx),\n          interpolate(oldImageData.data[oldPixelIndex10 + 3], oldImageData.data[oldPixelIndex11 + 3], oldImageData.data[oldPixelIndex12 + 3], dx),\n          interpolate(oldImageData.data[oldPixelIndex20 + 3], oldImageData.data[oldPixelIndex21 + 3], oldImageData.data[oldPixelIndex22 + 3], dx),\n          dy)\n      );\n    }\n  }\n\n  return newImageData;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helpers/resize.js\n// module id = 61\n// module chunks = 0"],"sourceRoot":""}