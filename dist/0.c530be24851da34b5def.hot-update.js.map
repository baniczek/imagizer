{"version":3,"sources":["webpack:///./src/classes/EffectsRepository.js?2ba1","webpack:///./src/classes/effects/point/Diffusion.js?9c4c"],"names":["availableEffects","add","name","_class","EffectsRepository","DiffusionEffect","matrix","levels","colorDither","granulate","parameters","width","height","imageData","i","sum","map","div","length","parseInt","pixel","x","y","red1","r","green1","g","blue1","b","red2","green2","blue2","data","tmpPixel","tmpRed","tmpGreen","tmpBlue","j","iy","jx","w","grayScale","getPixel","setPixel","a"],"mappings":"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","file":"0.c530be24851da34b5def.hot-update.js","sourcesContent":["import GrayScale from './effects/point/GrayScale';\nimport Sepia from './effects/point/Sepia';\nimport Contrast from './effects/point/Contrast';\nimport Brightness from './effects/point/Brightness';\nimport Diffusion from './effects/point/Diffusion';\n\nlet availableEffects = {};\n\nfunction add(name, _class) {\n    availableEffects[name] = _class;\n}\n\nadd('gray-scale', GrayScale);\nadd('sepia', Sepia);\nadd('contrast', Contrast);\nadd('brightness', Brightness);\nadd('diffusion', Diffusion);\n\nclass EffectsRepository {\n    static get(name) {\n        return availableEffects[name];\n    }\n}\n\nexport default EffectsRepository;\n\n\n// WEBPACK FOOTER //\n// ./src/classes/EffectsRepository.js","import BasePointEffect from '../BasePoint';\n\nclass DiffusionEffect extends BasePointEffect {\n    static getName() {\n        return 'brightness';\n    }\n\n    getDefaultParameters() {\n        return {\n            matrix: [0, 0, 0, 0, 0, 7, 3, 5, 1],\n            levels: 6,\n            colorDither: true,\n            granulate: true\n        };\n    }\n\n    before(parameters, width, height, imageData) {\n        let i, sum = 0, map = [], div = [];\n\n        for (i = 0; i < parameters.matrix.length; i += 1) {\n            sum += parameters.matrix[i];\n        }\n\n        for (i = 0; i < parameters.levels; i += 1) {\n            map[i] = parseInt(255 * i / (parameters.levels - 1));\n        }\n\n        for (i = 0; i < 256; i += 1) {\n            div[i] = parseInt(parameters.levels * i / 256);\n        }\n\n        return {\n            sum: sum,\n            map: map,\n            div: div\n        };\n    }\n\n    callback(pixel, x, y, parameters, width, height) {\n        let red1 = pixel.r,\n            green1 = pixel.g,\n            blue1 = pixel.b,\n            red2, green2, blue2,\n            data = this.data,\n            tmpPixel,\n            tmpRed, tmpGreen, tmpBlue,\n            i, j,\n            iy, jx,\n            w,\n            grayScale;\n\n        if (!parameters.colorDither) {\n            grayScale = (red1 + green1 + blue1) / 3;\n            red1 = grayScale;\n            green1 = grayScale;\n            blue1 = grayScale;\n        }\n\n        red2 = data.map[data.div[red1]];\n        green2 = data.map[data.div[green1]];\n        blue2 = data.map[data.div[blue1]];\n\n        tmpRed = red1 - red2;\n        tmpGreen = green1 - green2;\n        tmpBlue = blue1 - blue2;\n\n        if (parameters.granulate) {\n            for (i = -1; i <= 1; i += 1) {\n                iy = i + y;\n                if (iy < 0 || iy >= height) {\n                    continue;\n                }\n                for (j = -1; j <= 1; j += 1) {\n                    jx = j + x;\n                    if (jx < 0 || jx >= width) {\n                        continue;\n                    }\n                    w = parameters.matrix[(i + 1) * 3 + j + 1];\n                    if (w !== 0) {\n                        tmpPixel = this.getPixel(jx, iy);\n                        tmpPixel.r += (tmpRed * w / data.sum);\n                        tmpPixel.g += (tmpGreen * w / data.sum);\n                        tmpPixel.b += (tmpBlue * w / data.sum);\n                        this.setPixel(jx, iy, tmpPixel);\n                    }\n                }\n            }\n        }\n\n        return {\n            r: red2,\n            g: green2,\n            b: blue2,\n            a: pixel.a\n        };\n    }\n}\n\nexport default DiffusionEffect;\n\n\n// WEBPACK FOOTER //\n// ./src/classes/effects/point/Diffusion.js"],"sourceRoot":""}