{"version":3,"sources":["webpack:///./src/classes/EffectsRepository.js?2ba1","webpack:///./src/classes/effects/transform/Diffuse.js?64a2","webpack:///./src/classes/effects/BaseTransform.js?358b"],"names":["availableEffects","add","_class","getName","EffectsRepository","name","DiffuseEffect","scale","parameters","width","height","imageData","sinTable","Array","cosTable","i","angle","Math","PI","sin","cos","x","y","parseInt","random","distance","data","BaseTransformEffect","pixel","getDefaultParameters","normalizePixelValue","value","min","max","sandbox","imageDataCopy","Uint8ClampedArray","before","call","newXY","callback","newX","newY","oldPixelIndex","newPixelIndex","set"],"mappings":"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","file":"0.1d2e3cece66c63ae8fd1.hot-update.js","sourcesContent":["import GrayScale from './effects/point/GrayScale';\nimport Sepia from './effects/point/Sepia';\nimport Contrast from './effects/point/Contrast';\nimport Brightness from './effects/point/Brightness';\nimport Diffusion from './effects/point/Diffusion';\nimport Dither from './effects/point/Dither';\nimport Exposure from './effects/point/Exposure';\nimport Gain from './effects/point/Gain';\nimport Gamma from './effects/point/Gamma';\nimport HSBAdjust from './effects/point/HSBAdjust';\nimport InvertAlpha from './effects/point/InvertAlpha';\nimport Invert from './effects/point/Invert';\nimport Levels from './effects/point/Levels';\nimport Rescale from './effects/point/Rescale';\nimport Solarize from './effects/point/Solarize';\nimport Threshold from './effects/point/Threshold';\nimport Tritone from './effects/point/Tritone';\n\nimport Diffuse from './effects/transform/Diffuse';\n\nlet availableEffects = {};\n\nfunction add(_class) {\n    availableEffects[_class.getName()] = _class;\n}\n\nadd(GrayScale);\nadd(Sepia);\nadd(Contrast);\nadd(Brightness);\nadd(Diffusion);\nadd(Dither);\nadd(Exposure);\nadd(Gain);\nadd(Gamma);\nadd(HSBAdjust);\nadd(InvertAlpha);\nadd(Invert);\nadd(Levels);\nadd(Rescale);\nadd(Solarize);\nadd(Threshold);\nadd(Tritone);\nadd(Diffuse);\n\nclass EffectsRepository {\n    static get(name) {\n        return availableEffects[name];\n    }\n}\n\nexport default EffectsRepository;\n\n\n// WEBPACK FOOTER //\n// ./src/classes/EffectsRepository.js","import BaseTransformEffect from '../BaseTransform';\n\nclass DiffuseEffect extends BaseTransformEffect {\n    static getName() {\n        return 'diffuse';\n    }\n\n    getDefaultParameters() {\n        return {\n            scale: 4\n        };\n    }\n\n    before(parameters, width, height, imageData) {\n        let sinTable = new Array(256),\n            cosTable = new Array(256),\n            i,\n            angle;\n        for (i = 0; i < 256; i += 1) {\n            angle = Math.PI * 2 * i / 256;\n            sinTable[i] = parameters.scale * Math.sin(angle);\n            cosTable[i] = parameters.scale * Math.cos(angle);\n        }\n        return {\n            sinTable: sinTable,\n            cosTable: cosTable\n        };\n    }\n\n    callback(x, y, parameters) {\n        let angle = parseInt(Math.random() * 255),\n            distance = Math.random();\n\n        return [\n            x + distance * this.data.sinTable[angle],\n            y + distance * this.data.cosTable[angle]\n        ];\n    }\n}\n\nexport default DiffuseEffect;\n\n\n// WEBPACK FOOTER //\n// ./src/classes/effects/transform/Diffuse.js","import BaseEffect from './Base';\nimport extend from 'extend';\n\nclass BaseTransformEffect extends BaseEffect {\n    callback(pixel, x, y, parameters, width, height) {\n        throw \"Extend it.\"\n    }\n\n    run(imageData, parameters) {\n\n        parameters = extend(true, {}, this.getDefaultParameters(), parameters);\n\n        let x, y,\n            normalizePixelValue = function (value) {\n                return Math.min(Math.max(value, 0), 255) | 0;\n            },\n            sandbox = {\n                data: null\n            },\n            imageDataCopy = new Uint8ClampedArray(imageData.data);\n\n        sandbox.data = this.before.call(sandbox, parameters, imageData.width, imageData.height, imageData);\n\n        for (y = 0; y < imageData.height; y += 1) {\n            for (x = 0; x < imageData.width; x += 1) {\n                var newXY = this.callback.call(sandbox, x, y, parameters, imageData.width, imageData.height),\n                    newX = normalizePixelValue(newXY[0]),\n                    newY = normalizePixelValue(newXY[1]),\n                    oldPixelIndex = y * imageData.width * 4 + x * 4,\n                    newPixelIndex = newY * imageData.width * 4 + newX * 4;\n\n                imageDataCopy[oldPixelIndex + 0] = imageData.data[newPixelIndex + 0];\n                imageDataCopy[oldPixelIndex + 1] = imageData.data[newPixelIndex + 1];\n                imageDataCopy[oldPixelIndex + 2] = imageData.data[newPixelIndex + 2];\n                imageDataCopy[oldPixelIndex + 3] = imageData.data[newPixelIndex + 3];\n            }\n        }\n\n        imageData.data.set(imageDataCopy);\n        return imageData;\n    }\n}\n\nexport default BaseTransformEffect;\n\n\n// WEBPACK FOOTER //\n// ./src/classes/effects/BaseTransform.js"],"sourceRoot":""}