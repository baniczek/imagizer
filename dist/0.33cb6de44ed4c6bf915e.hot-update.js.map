{"version":3,"sources":["webpack:///./src/helpers/common.js?633f","webpack:///./src/classes/EffectsRepository.js?2ba1","webpack:///./src/classes/effects/point/Dissolve.js?ea74"],"names":["mergeImageData","mergePixelCallback","cropImageData","mod","triangle","smoothStep","blendingModes","lighten","bottomPixel","topPixel","darken","multiply","average","add","Math","min","subtract","difference","abs","negation","screen","exclusion","overlay","softLight","hardLight","colorDodge","colorBurn","max","linearDodge","linearBurn","linearLight","vividLight","pinLight","hardMix","reflect","glow","phoenix","bottom","top","pixelCallback","x","y","xx","yy","firstOldPixelIndex","firstNewPixelIndex","pixelResult","height","width","r","imageData","data","g","b","a","blendingMode","parameters","mergedR","mergedG","mergedB","mergedA","rootA","outA","rootR","rootG","rootB","oldImageData","newImageData","startX","startY","oldWidth","newWidth","n","floor","helpers","availableEffects","_class","getName","EffectsRepository","name","DissolveEffect","density","softness","d","minDensity","maxDensity","pixel","v","random","f"],"mappings":"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","file":"0.33cb6de44ed4c6bf915e.hot-update.js","sourcesContent":["let blendingModes = {\n    lighten: function (bottomPixel, topPixel) {\n        return topPixel > bottomPixel ? topPixel : bottomPixel;\n    },\n    darken: function (bottomPixel, topPixel) {\n        return topPixel > bottomPixel ? bottomPixel : topPixel;\n    },\n    multiply: function (bottomPixel, topPixel) {\n        return bottomPixel * topPixel / 255;\n    },\n    average: function (bottomPixel, topPixel) {\n        return bottomPixel + topPixel / 2;\n    },\n    add: function (bottomPixel, topPixel) {\n        return Math.min(255, bottomPixel + topPixel);\n    },\n    subtract: function (bottomPixel, topPixel) {\n        return bottomPixel + topPixel < 255 ? 0 : bottomPixel + topPixel - 255;\n    },\n    difference: function (bottomPixel, topPixel) {\n        return Math.abs(bottomPixel - topPixel);\n    },\n    negation: function (bottomPixel, topPixel) {\n        return 255 - Math.abs(255 - bottomPixel - topPixel);\n    },\n    screen: function (bottomPixel, topPixel) {\n        return 255 - (((255 - bottomPixel) * (255 - topPixel)) >> 8);\n    },\n    exclusion: function (bottomPixel, topPixel) {\n        return bottomPixel + topPixel - 2 * bottomPixel * topPixel / 255;\n    },\n    overlay: function (bottomPixel, topPixel) {\n        return topPixel < 128\n            ? (2 * bottomPixel * topPixel / 255)\n            : (255 - 2 * (255 - bottomPixel) * (255 - topPixel) / 255);\n    },\n    softLight: function (bottomPixel, topPixel) {\n        return topPixel < 128\n            ? (2 * ((bottomPixel >> 1) + 64)) * (topPixel / 255)\n            : 255 - (2 * (255 - (( bottomPixel >> 1) + 64)) * (255 - topPixel) / 255);\n    },\n    hardLight: function (bottomPixel, topPixel) {\n        return blendingModes.softLight(topPixel, bottomPixel);\n    },\n    colorDodge: function (bottomPixel, topPixel) {\n        return topPixel == 255 ? topPixel : Math.min(255, ((bottomPixel << 8 ) / (255 - topPixel)));\n    },\n    colorBurn: function (bottomPixel, topPixel) {\n        return topPixel == 0 ? topPixel : Math.max(0, (255 - ((255 - bottomPixel) << 8 ) / topPixel));\n    },\n    linearDodge: function (bottomPixel, topPixel) {\n        return blendingModes.add(bottomPixel, topPixel);\n    },\n    linearBurn: function (bottomPixel, topPixel) {\n        return blendingModes.subtract(bottomPixel, topPixel);\n    },\n    linearLight: function (bottomPixel, topPixel) {\n        return topPixel < 128\n            ? blendingModes.linearBurn(bottomPixel, 2 * topPixel)\n            : blendingModes.linearDodge(bottomPixel, (2 * (topPixel - 128)));\n    },\n    vividLight: function (bottomPixel, topPixel) {\n        return topPixel < 128\n            ? blendingModes.colorBurn(bottomPixel, 2 * topPixel)\n            : blendingModes.colorDodge(bottomPixel, (2 * (topPixel - 128)));\n    },\n    pinLight: function (bottomPixel, topPixel) {\n        return topPixel < 128\n            ? blendingModes.darken(bottomPixel, 2 * topPixel)\n            : blendingModes.lighten(bottomPixel, (2 * (topPixel - 128)));\n    },\n    hardMix: function (bottomPixel, topPixel) {\n        return blendingModes.vividLight(bottomPixel, topPixel) < 128 ? 0 : 255;\n    },\n    reflect: function (bottomPixel, topPixel) {\n        return topPixel == 255 ? topPixel : Math.min(255, (bottomPixel * bottomPixel / (255 - topPixel)))\n    },\n    glow: function (bottomPixel, topPixel) {\n        return blendingModes.reflect(topPixel, bottomPixel);\n    },\n    phoenix: function (bottomPixel, topPixel) {\n        return Math.min(bottomPixel, topPixel) - Math.max(bottomPixel, topPixel) + 255\n    }\n};\n\nexport function mergeImageData(bottom, top, pixelCallback) {\n    let x, y,\n        xx, yy,\n        firstOldPixelIndex, firstNewPixelIndex,\n        pixelResult;\n\n    for (y = top.y, yy = 0; y < bottom.height && yy < top.height; y += 1, yy += 1) {\n        for (x = top.x, xx = 0; x < bottom.width && xx < top.width; x += 1, xx += 1) {\n            if (xx < top.width && yy < top.height) // overwrite only rect-size of current layer\n            {\n                firstOldPixelIndex = y * bottom.width * 4 + x * 4;\n                firstNewPixelIndex = yy * top.width * 4 + xx * 4;\n\n                pixelResult = pixelCallback({\n                    r: bottom.imageData.data[firstOldPixelIndex + 0],\n                    g: bottom.imageData.data[firstOldPixelIndex + 1],\n                    b: bottom.imageData.data[firstOldPixelIndex + 2],\n                    a: bottom.imageData.data[firstOldPixelIndex + 3]\n                }, {\n                    r: top.imageData.data[firstNewPixelIndex + 0],\n                    g: top.imageData.data[firstNewPixelIndex + 1],\n                    b: top.imageData.data[firstNewPixelIndex + 2],\n                    a: top.imageData.data[firstNewPixelIndex + 3]\n                }, x, y, {\n                    blendingMode: top.blendingMode\n                });\n\n                if (pixelResult !== false) // if skip change\n                {\n                    bottom.imageData.data[firstOldPixelIndex + 0] = pixelResult.r;\n                    bottom.imageData.data[firstOldPixelIndex + 1] = pixelResult.g;\n                    bottom.imageData.data[firstOldPixelIndex + 2] = pixelResult.b;\n                    bottom.imageData.data[firstOldPixelIndex + 3] = pixelResult.a;\n                }\n            }\n        }\n    }\n    return bottom.imageData;\n}\n\nexport function mergePixelCallback(bottomPixel, topPixel, x, y, parameters) {\n    if (topPixel.a === 0) {\n        return false; // skip change - opacity is full\n    }\n\n    // alpha compositing\n    let mergedR,\n        mergedG,\n        mergedB,\n        mergedA = topPixel.a / 255,\n        rootA = bottomPixel.a / 255 * (1 - mergedA),\n        outA = (mergedA + bottomPixel.a * (1 - mergedA) / 255);\n\n    switch (parameters.blendingMode) {\n        case \"lighten\":\n        case \"darken\":\n        case \"multiply\":\n        case \"average\":\n        case \"add\":\n        case \"subtract\":\n        case \"difference\":\n        case \"negation\":\n        case \"screen\":\n        case \"exclusion\":\n        case \"overlay\":\n        case \"softLight\":\n        case \"hardLight\":\n        case \"colorDodge\":\n        case \"colorBurn\":\n        case \"linearDodge\":\n        case \"linearBurn\":\n        case \"linearLight\":\n        case \"vividLight\":\n        case \"pinLight\":\n        case \"hardMix\":\n        case \"reflect\":\n        case \"glow\":\n        case \"phoenix\":\n            topPixel.r = blendingModes[parameters.blendingMode](bottomPixel.r, topPixel.r);\n            topPixel.g = blendingModes[parameters.blendingMode](bottomPixel.g, topPixel.g);\n            topPixel.b = blendingModes[parameters.blendingMode](bottomPixel.b, topPixel.b);\n            break;\n\n        default:\n            break;\n    }\n\n    let rootR = bottomPixel.r;\n    let rootG = bottomPixel.g;\n    let rootB = bottomPixel.b;\n\n    mergedR = topPixel.r * mergedA + rootR * rootA;\n    mergedG = topPixel.g * mergedA + rootG * rootA;\n    mergedB = topPixel.b * mergedA + rootB * rootA;\n\n    mergedR = outA == 0 ? 0 : mergedR / outA;\n    mergedG = outA == 0 ? 0 : mergedG / outA;\n    mergedB = outA == 0 ? 0 : mergedB / outA;\n\n    return {\n        r: Math.min(Math.max(0, mergedR), 255) | 0,\n        g: Math.min(Math.max(0, mergedG), 255) | 0,\n        b: Math.min(Math.max(0, mergedB), 255) | 0,\n        a: (255 * outA) | 0\n    }\n}\n\nexport function cropImageData(oldImageData, newImageData, startX, startY, width, height) {\n    let oldWidth = oldImageData.width,\n        newWidth = newImageData.width,\n        x, y, xx, yy,\n        firstOldPixelIndex, firstNewPixelIndex;\n\n    for (y = startY, yy = 0; y < startY + height && yy < height; y += 1, yy += 1) {\n        for (x = startX, xx = 0; x < startX + width && xx < width; x += 1, xx += 1) {\n            firstOldPixelIndex = y * oldWidth * 4 + x * 4;\n            firstNewPixelIndex = yy * newWidth * 4 + xx * 4;\n\n            newImageData.data[firstNewPixelIndex] = oldImageData.data[firstOldPixelIndex];\n            newImageData.data[firstNewPixelIndex + 1] = oldImageData.data[firstOldPixelIndex + 1];\n            newImageData.data[firstNewPixelIndex + 2] = oldImageData.data[firstOldPixelIndex + 2];\n            newImageData.data[firstNewPixelIndex + 3] = oldImageData.data[firstOldPixelIndex + 3];\n        }\n    }\n\n    return newImageData;\n}\n\nexport function mod(a, b) {\n    var n = Math.floor(a / b);\n    a -= n * b;\n    if (a < 0) {\n        return a + b;\n    }\n    return a;\n}\n\nexport function triangle(x) {\n    var r = helpers.mod(x, 1);\n    return 2 * (r < 0.5 ? r : 1 - r);\n}\n\nexport function smoothStep(a, b, x) {\n    if (x < a) {\n        return 0;\n    }\n    if (x >= b) {\n        return 1;\n    }\n    x = (x - a) / (b - a);\n    return x * x * (3 - 2 * x);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/common.js","import GrayScale from './effects/point/GrayScale';\nimport Sepia from './effects/point/Sepia';\nimport Contrast from './effects/point/Contrast';\nimport Brightness from './effects/point/Brightness';\nimport Diffusion from './effects/point/Diffusion';\nimport Dither from './effects/point/Dither';\nimport Exposure from './effects/point/Exposure';\nimport Gain from './effects/point/Gain';\nimport Gamma from './effects/point/Gamma';\nimport HSBAdjust from './effects/point/HSBAdjust';\nimport InvertAlpha from './effects/point/InvertAlpha';\nimport Invert from './effects/point/Invert';\nimport Levels from './effects/point/Levels';\nimport Rescale from './effects/point/Rescale';\nimport Solarize from './effects/point/Solarize';\nimport Threshold from './effects/point/Threshold';\nimport Tritone from './effects/point/Tritone';\nimport Dissolve from './effects/point/Dissolve';\n\nimport Diffuse from './effects/transform/Diffuse';\n\nlet availableEffects = {};\n\nfunction add(_class) {\n    availableEffects[_class.getName()] = _class;\n}\n\nadd(GrayScale);\nadd(Sepia);\nadd(Contrast);\nadd(Brightness);\nadd(Diffusion);\nadd(Dither);\nadd(Exposure);\nadd(Gain);\nadd(Gamma);\nadd(HSBAdjust);\nadd(InvertAlpha);\nadd(Invert);\nadd(Levels);\nadd(Rescale);\nadd(Solarize);\nadd(Threshold);\nadd(Tritone);\nadd(Diffuse);\nadd(Dissolve);\n\nclass EffectsRepository {\n    static get(name) {\n        return availableEffects[name];\n    }\n}\n\nexport default EffectsRepository;\n\n\n// WEBPACK FOOTER //\n// ./src/classes/EffectsRepository.js","import BasePointEffect from '../BasePoint';\nimport {smoothStep} from '../../../helpers/common';\n\nclass DissolveEffect extends BasePointEffect {\n    static getName() {\n        return 'dissolve';\n    }\n\n    getDefaultParameters() {\n        return {\n            density: 1,\n            softness: 0\n        };\n    }\n\n    before(parameters, width, height, imageData) {\n        let d = (1 - parameters.density) * (1 + parameters.softness);\n        return {\n            minDensity: d - parameters.softness,\n            maxDensity: d\n        };\n    }\n\n    callback(pixel, x, y, parameters, width, height) {\n        let v = Math.random(),\n            f = smoothStep(this.data.minDensity, this.data.maxDensity, v);\n        pixel.a = pixel.a * f;\n        return pixel;\n    }\n}\n\nexport default DissolveEffect;\n\n\n// WEBPACK FOOTER //\n// ./src/classes/effects/point/Dissolve.js"],"sourceRoot":""}